<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Hexo 更新日志]]></title>
      <url>https://jacklightchen.github.io/2016/10/26/Hexo-%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><font color="#6495ED" size="5" face="微软雅黑">在此记录此博客的Updating Logs</font><a id="more"></a><br>支持多说评论 <font color="#00EC00">Finished</font><br>支持百度统计 <font color="#00EC00">Finished</font><br>支持不蒜子统计 <font color="#00EC00">Finished</font><br>支持http音乐播放 <font color="#00EC00">Finished</font><br>支持置顶功能 <font color="#FF44FF">Constructing</font><br>支持全站背景音乐 <font color="#FF0000">Unconfirmed</font><br>支持首页跳转页面 <font color="#FF0000">Unconfirmed</font>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[I'm here waiting for Your touch]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/I'm%20here%20waiting%20for%20Your%20touch/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="https://music.daoapp.io/iframe?song=34723470&qssl=1&qlrc=0&qnarrow=0&autoplay=1"></iframe></p>
<p><font color="#6495ED" size="5" face="微软雅黑">如果你竟然 别来无恙 只好怪时光 还不够漫长</font><br>看到yisa苣苣的博客，见猎心喜，这才是博客嘛。<a id="more"></a>原来的CSDN根本满足不了我想乱搞界面的冲动-。-而博客园又感觉老气丛生0.0<br>于是花了一个晚上研究了下怎么搭，学习了git和一点点html，这里推荐<a href="http://www.cnblogs.com/tengj/p/5348556.html" target="_blank" rel="external">http://www.cnblogs.com/tengj/p/5348556.html</a><br>然后又用了一个早上把之前的博客用markdown重新写了一遍。。。<br>然后又用了一个下午到处看皮肤模板，总算是初步搞定了基本的界面。<br>那么，就把这里当作是一个新的开始吧，Fighting！！！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[POJ 3461 Oulipo(KMP详解)]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/POJ-3461-Oulipo-KMP%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><font color="#6495ED" size="5" face="微软雅黑">Oulipo</font></p>
<p><font color="#008000" size="4" face="微软雅黑">Time Limit: 1000MS         Memory Limit: 65536K<br>Total Submissions: 36962         Accepted: 14918<br>Description</font><br>The French author Georges Perec (1936–1982) once wrote a book, La disparition, without the letter ‘e’.<a id="more"></a> He was a member of the Oulipo group. A quote from the book:<br>Tout avait Pair normal, mais tout s’affirmait faux. Tout avait Fair normal, d’abord, puis surgissait l’inhumain, l’affolant. Il aurait voulu savoir où s’articulait l’association qui l’unissait au roman : stir son tapis, assaillant à tout instant son imagination, l’intuition d’un tabou, la vision d’un mal obscur, d’un quoi vacant, d’un non-dit : la vision, l’avision d’un oubli commandant tout, où s’abolissait la raison : tout avait l’air normal mais…<br>Perec would probably have scored high (or rather, low) in the following contest. People are asked to write a perhaps even meaningful text on some subject with as few occurrences of a given “word” as possible. Our task is to provide the jury with a program that counts these occurrences, in order to obtain a ranking of the competitors. These competitors often write very long texts with nonsense meaning; a sequence of 500,000 consecutive ‘T’s is not unusual. And they never use spaces.<br>So we want to quickly find out how often a word, i.e., a given string, occurs in a text. More formally: given the alphabet {‘A’, ‘B’, ‘C’, …, ‘Z’} and two finite strings over that alphabet, a word W and a text T, count the number of occurrences of W in T. All the consecutive characters of W must exactly match consecutive characters of T. Occurrences may overlap.<br>Input<br>The first line of the input file contains a single number: the number of test cases to follow. Each test case has the following format:</p>
<p>One line with the word W, a string over {‘A’, ‘B’, ‘C’, …, ‘Z’}, with 1 ≤ |W| ≤ 10,000 (here |W| denotes the length of the string W).<br>One line with the text T, a string over {‘A’, ‘B’, ‘C’, …, ‘Z’}, with |W| ≤ |T| ≤ 1,000,000.<br>Output</p>
<p>For every test case in the input file, the output should contain a single number, on a single line: the number of occurrences of the word W in the text T.</p>
<p>Sample Input</p>
<p>3<br>BAPC<br>BAPC<br>AZA<br>AZAZAZA<br>VERDI<br>AVERDXIVYERDIAN<br>Sample Output</p>
<p>1<br>3<br>0<br>Source</p>
<p>BAPC 2006 Qualification</p>
<p><font color="#FF0000" size="4"><br>题解：一道KMP模板题，通过这道题可以很好地理解KMP<br>KMP很重要的一点就是原字符串的下标i永不回退，回退的是匹配的字符串的下标j<br>还有一点重要的的是next[k]数组，next[k]表示的是下标为k之前的子字符串中最长的前缀后缀相同的长度，那next数组有什么用那，用处就是在匹配字符失败的时候直接移动j来进行下一次匹配。<br>在这里推荐几篇能够讲清楚kmp的文章：<br>从头到尾彻底理解KMP：<a href="http://blog.csdn.net/v_july_v/article/details/7041827" target="_blank" rel="external">http://blog.csdn.net/v_july_v/article/details/7041827</a><br>KMPnext数组详解：<a href="http://www.cnblogs.com/tangzhengyue/p/4315393.html" target="_blank" rel="external">http://www.cnblogs.com/tangzhengyue/p/4315393.html</a><br>接下来是AC code(不过跑得好慢):</font><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.*;  </div><div class="line"><span class="keyword">import</span> java.util.*;  </div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;  </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </div><div class="line">        Scanner sc=<span class="keyword">new</span> Scanner(System.in);  </div><div class="line">        <span class="keyword">int</span> n=sc.nextInt();  </div><div class="line">        sc.nextLine();  </div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> o=<span class="number">1</span>;o&lt;=n;o++)&#123;  </div><div class="line">            String pat=sc.nextLine();  </div><div class="line">            String txt=sc.nextLine();  </div><div class="line">            <span class="keyword">int</span> count=<span class="number">0</span>;  </div><div class="line">            <span class="keyword">int</span>[]next=makeNext(pat);<span class="comment">//创建匹配字符串的next数组  </span></div><div class="line">            <span class="keyword">int</span> t_length=txt.length();  </div><div class="line">            <span class="keyword">int</span> p_length=pat.length();  </div><div class="line">            <span class="keyword">int</span> j=<span class="number">0</span>;  </div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t_length;i++)&#123;  </div><div class="line">                <span class="keyword">while</span>(j&gt;<span class="number">0</span>&amp;&amp;txt.charAt(i)!=pat.charAt(j))&#123;  </div><div class="line">                    j=next[j];<span class="comment">//当匹配失败时，回退j  </span></div><div class="line">                &#125;  </div><div class="line">                <span class="keyword">if</span>(txt.charAt(i)==pat.charAt(j))&#123;  </div><div class="line">                    j++;<span class="comment">//如果当前字符匹配，j++往后找  </span></div><div class="line">                &#125;  </div><div class="line">                <span class="keyword">if</span>(j==p_length)&#123;  </div><div class="line">                    count++;  </div><div class="line">                    j=next[j];<span class="comment">//找到了，count++过以后将当作没有匹配到，回退j  </span></div><div class="line">                &#125;  </div><div class="line">            &#125;  </div><div class="line">            System.out.println(count);  </div><div class="line">        &#125;  </div><div class="line">  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] makeNext(String s)&#123;  </div><div class="line">        <span class="keyword">int</span> s_length=s.length();  </div><div class="line">        <span class="keyword">int</span>[] next=<span class="keyword">new</span> <span class="keyword">int</span> [s_length+<span class="number">1</span>];  </div><div class="line">        <span class="keyword">int</span> j=<span class="number">0</span>;  </div><div class="line">        <span class="keyword">int</span> k=-<span class="number">1</span>;  </div><div class="line">        next[<span class="number">0</span>]=-<span class="number">1</span>;  </div><div class="line">        <span class="keyword">while</span>(j&lt;s_length)&#123;  </div><div class="line">            <span class="keyword">if</span>(k==-<span class="number">1</span>||s.charAt(j)==s.charAt(k))&#123;  </div><div class="line">                next[++j]=++k;  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">else</span>  </div><div class="line">                k=next[k];  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">return</span> next;  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Exams Codeforces Round#377-D(贪心+二分)]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/Exams-Codeforces-Round-377-D-%E8%B4%AA%E5%BF%83-%E4%BA%8C%E5%88%86/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><font color="#6495ED" size="5" face="微软雅黑">D. Exams</font></p>
<p><font color="#008000" size="4" face="微软雅黑">time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output</font><br>Vasiliy has an exam period which will continue for n days.<a id="more"></a>He has to pass exams on m subjects. Subjects are numbered from 1 to m.<br>About every day we know exam for which one of m subjects can be passed on that day. Perhaps, some day you can’t pass any exam. It is not allowed to pass more than one exam on any day.<br>On each day Vasiliy can either pass the exam of that day (it takes the whole day) or prepare all day for some exam or have a rest.<br>About each subject Vasiliy know a number ai — the number of days he should prepare to pass the exam number i. Vasiliy can switch subjects while preparing for exams, it is not necessary to prepare continuously during ai days for the exam number i. He can mix the order of preparation for exams in any way.<br>Your task is to determine the minimum number of days in which Vasiliy can pass all exams, or determine that it is impossible. Each exam should be passed exactly one time.<br>Input<br>The first line contains two integers n and m (1 ≤ n, m ≤ 105) — the number of days in the exam period and the number of subjects.<br>The second line contains n integers d1, d2, …, dn (0 ≤ di ≤ m), where di is the number of subject, the exam of which can be passed on the day number i. If di equals 0, it is not allowed to pass any exams on the day number i.<br>The third line contains m positive integers a1, a2, …, am (1 ≤ ai ≤ 105), where ai is the number of days that are needed to prepare before passing the exam on the subject i.<br>Output<br>Print one integer — the minimum number of days in which Vasiliy can pass all exams. If it is impossible, print -1.<br>Examples<br>input<br>7 2<br>0 1 0 2 1 0 2<br>2 1<br>output<br>5<br>input<br>10 3<br>0 0 1 2 3 0 2 0 1 2<br>1 1 4<br>output<br>9<br>input<br>5 1<br>1 1 1 1 1<br>5<br>output<br>-1<br>Note<br>In the first example Vasiliy can behave as follows. On the first and the second day he can prepare for the exam number 1 and pass it on the fifth day, prepare for the exam number 2 on the third day and pass it on the fourth day.<br>In the second example Vasiliy should prepare for the exam number 3 during the first four days and pass it on the fifth day. Then on the sixth day he should prepare for the exam number 2 and then pass it on the seventh day. After that he needs to prepare for the exam number 1 on the eighth day and pass it on the ninth day.<br>In the third example Vasiliy can’t pass the only exam because he hasn’t anough time to prepare for it.</p>
<p><font color="#FF0000" size="4">题解：<br>首先是如何判断在第a天能考完所有科目，这里有一个函数judge(int a)。这道题很重要的一个思想就是从后往前判断而不是从前往后判断，因为一场考试可能有多个天数可以考，但考试天数处于后面的拥有的复习天数总是比天数处于前面的要多，所以从后往前考虑不会有问题。但如果从前往后考虑，就会出现本来考试的那天其实是用来复习的问题。<br>那么如何判断第a天能考完所有科目那，我们需要一个数组来标记每门学科是否被考过，一个sum来储存我们需要复习的天数，还有一个v变量储存考过的学科的数量。<br>然后我们从第a天到第1天遍历，如果那天可以考试，即day[i]&gt;0且那天考得科目还没有考过即&amp;&amp;used[day[i]]==false，那么我们选择在那天考试，然后sum+=sub[day[i]]，并且将那门学科标记为考过，即used[day[i]]=true,然后v++。<br>如果那天不可以考试或者那天考得科目已经考过，我们就判断sum，如果sum&gt;0，(即我们还需要天数去复习)，就sum–。<br>最后判断是否sum&lt;=0(即有足够的天数去复习)&amp;&amp;v==m(考过所有科目)，那么第a天就是符合能考完所有科目的天数。<br>然后的问题就是找最小的天数了，又因为这道题的数据达到了10^5，显然，如果遍历所有天数的话，复杂度将达到O(n^2)显然会超时，所以我们这里用二分查找来降低复杂度，使之变成O(nlog(n))。<br>接下来是AC code:</font><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//package D2;  </span></div><div class="line"><span class="keyword">import</span> java.io.*;  </div><div class="line"><span class="keyword">import</span> java.util.*;  </div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;  </div><div class="line"><span class="keyword">static</span> <span class="keyword">boolean</span>[] used;  </div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> day[];  </div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> sub[];  </div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> m;  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </div><div class="line">        Scanner sc=<span class="keyword">new</span> Scanner(System.in);  </div><div class="line">        <span class="keyword">while</span>(sc.hasNext())&#123;  </div><div class="line">            <span class="keyword">int</span> n=sc.nextInt();  </div><div class="line">            m=sc.nextInt();  </div><div class="line">            day=<span class="keyword">new</span> <span class="keyword">int</span> [n+<span class="number">1</span>];  </div><div class="line">            sub=<span class="keyword">new</span> <span class="keyword">int</span> [m+<span class="number">1</span>];  </div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;  </div><div class="line">                day[i]=sc.nextInt();  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;  </div><div class="line">                sub[i]=sc.nextInt();  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">int</span> flag=<span class="number">0</span>;  </div><div class="line">            <span class="keyword">int</span> jg=<span class="number">0</span>;  </div><div class="line">            <span class="comment">//遍历复杂度太高  </span></div><div class="line">            <span class="comment">/*for(int i=1;i&lt;=n;i++)&#123; </span></div><div class="line">                if(judge(i))&#123; </div><div class="line">                    flag=1; </div><div class="line">                    jg=i; </div><div class="line">                    break; </div><div class="line">                &#125; </div><div class="line">            &#125;*/  </div><div class="line">            <span class="keyword">int</span> start = <span class="number">1</span>;  </div><div class="line">            <span class="keyword">int</span> end = n;  </div><div class="line">            <span class="keyword">while</span>(start&lt;=end)&#123;  </div><div class="line">                <span class="keyword">int</span> mid=(start+end)/<span class="number">2</span>;  </div><div class="line">                    <span class="keyword">if</span>(judge(mid))&#123;<span class="comment">//如果找到，就往左边找  </span></div><div class="line">                        end=mid-<span class="number">1</span>;  </div><div class="line">                        flag=<span class="number">1</span>;<span class="comment">//标记  </span></div><div class="line">                        jg=mid;<span class="comment">//记录结果，其实可以省略  </span></div><div class="line">                    &#125;  </div><div class="line">                    <span class="keyword">else</span>&#123;  </div><div class="line">                        start=mid+<span class="number">1</span>;  </div><div class="line">                    &#125;  </div><div class="line">                &#125;  </div><div class="line">            <span class="keyword">if</span>(flag==<span class="number">1</span>)&#123;  </div><div class="line">                System.out.println(jg);  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">else</span>  </div><div class="line">                System.out.println(-<span class="number">1</span>);  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;  </div><div class="line">        <span class="keyword">int</span> v=<span class="number">0</span>,sum=<span class="number">0</span>,count=<span class="number">0</span>;  </div><div class="line">        used=<span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">100005</span>];<span class="comment">//记录科目是否考过的数组  </span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=a;i&gt;=<span class="number">1</span>;i--)&#123;  </div><div class="line">            <span class="keyword">if</span>(day[i]&gt;<span class="number">0</span>&amp;&amp;used[day[i]]==<span class="keyword">false</span>)&#123;<span class="comment">//如果那天可以考且那门课没有考过  </span></div><div class="line">                sum+=sub[day[i]];<span class="comment">//记录需要复习的天数  </span></div><div class="line">                used[day[i]]=<span class="keyword">true</span>;<span class="comment">//把那门课设置为已考过  </span></div><div class="line">                count++;<span class="comment">//记录考过的科目数  </span></div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(sum&gt;<span class="number">0</span>)&#123;<span class="comment">//注意这里有坑 需先判断sum&gt;0，如果不判断的话，会出现sum=0时明明不需要复习了，你却依旧把那天进行复习  </span></div><div class="line">                sum--;  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">if</span>(sum&lt;=<span class="number">0</span>&amp;&amp;count==m)&#123;  </div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">else</span>  </div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SHUOJ 1611 矩阵连乘问题（dp）]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/SHUOJ-1611-%E7%9F%A9%E9%98%B5%E8%BF%9E%E4%B9%98%E9%97%AE%E9%A2%98%EF%BC%88dp%EF%BC%89/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><font color="#6495ED" size="5" face="微软雅黑">矩阵连乘问题</font><br>给定n个矩阵A1，A2，…，An，其中，Ai与Aj+1是可乘的，i=1，2，…，n-1。<a id="more"></a><br>你的任务是要确定矩阵连乘的运算次序，使计算这n个矩阵的连乘积A1A2…An时总的元素乘法次数达到最少。<br>例如：3个矩阵A1，A2，A3，阶分别为10×100、100×5、5×50，计算连乘积A1A2A3时按（A1A2）A3所需的元素乘法次数达到最少，为7500次。<br>Input<br>测试数据有若干组，每组测试数据有2行。</p>
<p>每组测试数据的第1行是一个整数n，（0&lt;n&lt;20），第2行是n+1个正整数p0、p1、p2、…、pn，这些整数不超过100，相邻两个整数之间空一格，他们表示n个矩阵A1，A2，…，An，的阶pi-1´pi，i=1，2，…，n。</p>
<p>输入直到文件结束。</p>
<p>Output<br>对输入中的每组测试数据，输出2行。先在一行上输出“Case #”，其中“#”是测试数据的组号（从1开始），再在第2行上输出计算这n个矩阵的连乘积A1A2…An时最少的总的元素乘法次数，再空一格，接着在同一行上输出矩阵连乘的添括号形式。</p>
<p>注意：最外层括号应去掉。</p>
<p>Sample Input<br>310 100 5 50450 10 40 30 5<br>Sample Output<br> Case 1<br>7500 (A1A2)A3<br>Case 2<br>10500 A1(A2(A3A4))</p>
<p><font color="#FF0000" size="4">题解：<br>现在的我果然还只是个蒟蒻，dp一片混沌。。希望半年后我回头看时能豁然开朗吧0.0<br>强推<a href="http://m.blog.csdn.net/article/details?id=8030012" target="_blank" rel="external">http://m.blog.csdn.net/article/details?id=8030012</a><br>dp最重要的是递推关系，递推关系见链接内：<br>对不起这个公式我是推不出来的。。我照着别人的公式推还推了半天。。<br>那么跨过了dp递推公式的难关，这个题还有一个难点是如何打印括号，<br>这里是使用递推进行括号匹配的。<br>（注意如果大于一个矩阵的话，递推公式会把最前面和最后面的括号也打出来，不符合题意，需要自己删除）<br>附上渣渣调了半天才过的AC Code：</font></p>
<pre><code class="java"><span class="keyword">import</span> java.io.*;  
<span class="keyword">import</span> java.util.*;  
<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{  
<span class="keyword">static</span> <span class="keyword">int</span> shu[];  
<span class="keyword">static</span> <span class="keyword">int</span> dp[][];  
<span class="keyword">static</span> <span class="keyword">int</span> jl[][];  
<span class="keyword">static</span> <span class="keyword">int</span> n;  
<span class="keyword">static</span> StringBuilder s;  
    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{  
        Scanner sc=<span class="keyword">new</span> Scanner(System.in);  
        <span class="keyword">int</span> r=<span class="number">0</span>;  
        <span class="keyword">while</span>(sc.hasNext()){  
            r++;  
            System.out.println(<span class="string">"Case "</span>+r);  
            n=sc.nextInt();  
            s=<span class="keyword">new</span> StringBuilder();  
            <span class="keyword">int</span> k=n+<span class="number">1</span>;  
            dp=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][n+<span class="number">1</span>];  
            jl=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][n+<span class="number">1</span>];  
            shu=<span class="keyword">new</span> <span class="keyword">int</span>[k];  
            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++){  
                shu[i]=sc.nextInt();  
            }  
            dp();  
            <span class="comment">/*System.out.println(n); 
            for(int i=0;i&lt;n+1;i++){ 
                for(int j=0;j&lt;n+1;j++) 
                { 
                    System.out.print(dp[i][j]); 
                } 
                System.out.println('\n'); 
                }*/</span>  
            printBrackets(<span class="number">1</span>,n);<span class="comment">//根据jl矩阵递归将括号结果保存在s中  </span>
            System.out.print(dp[<span class="number">1</span>][n]+<span class="string">" "</span>);  
            <span class="comment">//判断不是只有一个矩阵  </span>
            <span class="keyword">if</span>(s.charAt(<span class="number">0</span>)==<span class="string">'('</span>){  
            s.deleteCharAt(<span class="number">0</span>);  
            s.deleteCharAt(s.length()-<span class="number">1</span>);}  
            System.out.println(s);  
            }  
            }  
   <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dp</span><span class="params">()</span></span>{  
       <span class="keyword">int</span> j;  
       <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++){    <span class="comment">// 枚举矩阵链长度  </span>

           <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-l+<span class="number">1</span>;i++){    <span class="comment">//  枚举矩阵链的起点  </span>
               j=i+l-<span class="number">1</span>;  
               dp[i][j]=Integer.MAX_VALUE;  
               <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;=j-<span class="number">1</span>;k++){  <span class="comment">//枚举断点  </span>
                   <span class="keyword">int</span> cur=dp[i][k]+dp[k+<span class="number">1</span>][j]+shu[i-<span class="number">1</span>]*shu[k]*shu[j];<span class="comment">//递推  </span>
                   <span class="keyword">if</span>(cur&lt;dp[i][j]){  
                       dp[i][j]=cur;  
                       jl[i][j]=k;  
               }  
           }  
       }  
   }  
   }  
   <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printBrackets</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>{  
       <span class="keyword">if</span>(i==j){  
           s.append(<span class="string">"A"</span>+i);  
       }  
       <span class="keyword">else</span>{  
           s.append(<span class="string">"("</span>);  
           printBrackets(i,jl[i][j]);  
           printBrackets(jl[i][j]+<span class="number">1</span>,j);  
           s.append(<span class="string">")"</span>);  
       }  
   }  
}
</code></pre>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SHUOJ 2065 Jazz_Charles的Dog数列(矩阵快速幂)]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/SHUOJ-2065-Jazz-Charles%E7%9A%84Dog%E6%95%B0%E5%88%97-%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><font color="#6495ED" size="5" face="微软雅黑">Jazz_Charles的Dog数列</font><br><font color="#008000" size="4" face="微软雅黑">Description</font><br>Jazz_Charles发现了一个数列称为Dog数列：<a id="more"></a><br><br>                A[1] = 1<br><br>                A[2] = 1<br><br>                A[n] = A[n-1] + 8<em>A[n-2]<br><br>onisac看到这个数列之后，问了Jazz_Charles一个简单的问题，给定一个整数n，求A[n]是多少？<br><br>Jazz_Charles自然是答不来的，所以他请你替他回答这个问题。<br><br><br>（Dog数列名称由来(●’◡’●)）<br><br>Input<br>多组数据，每组一行，一个整数n(0&lt;n&lt;=10000000000000)<br><br>Output<br>每组输出一行，输出A[n] (对100000007取膜)<br><br>Sample Input<br> 1<br>2<br>3<br>Sample Output<br> 1<br>1<br>9<br>HINT<br>暴力写是不行的哦<br>汪汪汪 Java BigInteger BigDecimal花式TLE<br>换C++大数模板花式TLE<br>搜OEIS看到通项公式 a(n) = (((1+sqrt(33))/2)^(n+1) - ((1-sqrt(33))/2)^(n+1))/sqrt(33).<br>然后心里美滋滋的暴力一发花式TLE<br>然后灵光一闪 这不是和快速幂模很像吗。。<br>果然自己还是太弱了。。这摆明了要0(logn)的算法，我用O(n)硬怼。。<br>但小数又没有取模规则。。肯定有其他方法。。<br>然后到处找找到了做法。。<br>随缘写了一发过了。。<br>题解：用矩阵快速幂<br><img src="http://ofj2afd76.bkt.clouddn.com/20140907103041185.gif" alt="斐波那契"><br>这很重要，上面的是用矩阵快速幂来模拟斐波那契数列的过程<br>详情百度搜索poj3070or斐波那契数列快速幂模<br>所以这道题的单位矩阵变一下就好了，变成：1，1<br>                                        8，0<br>也就是说(b,a)</em>(1,1)       =(b+8<em>a,b);(意思理解就好了）<br>              (8,0)<br>看<br>也就是说乘一次转换矩阵就相当变换了一次，而原始矩阵我们可以构造的和转换矩阵一样，因为恰好F(1)=1且F(2)=1，见图，左是原始矩阵(正好跟转换矩阵一样)，右是我们每次乘的矩阵。<br>//算了我编不下去了，其实是随便猜了一个正好对了就是这样。。(划掉)<br><img src="http://ofj2afd76.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20161024122108.png" alt="题解"><br>所以我们只要关心那个转换矩阵的n次幂后第0行第1个的值就是我们要求的值<br>而快速幂的好处就是将本来一个一个乘导致的O(n)的复杂度降到O(logn)所以不会超时，而因为取模规则a^n%p可以化简为（（a%p)^n）%p/</em>(大概0.0，记得是这样的。。）*/所以每次取模保证不会溢出，快速幂中也可以运用这条规则，这就造就了快速幂模完美地解决了时间复杂度和溢出的问题。<br><br><font color="#FF0000" size="4"><br> AC Code：<br></font>

<pre><code class="java"><span class="comment">//package K;  </span>
<span class="keyword">import</span> java.io.*;  
<span class="keyword">import</span> java.math.BigDecimal;  
<span class="keyword">import</span> java.math.BigInteger;  
<span class="keyword">import</span> java.util.*;  
<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{  
<span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> MOD=<span class="number">100000007</span>;  
<span class="keyword">static</span> Matrix ans=<span class="keyword">new</span> Matrix();  
    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{  
        Scanner sc=<span class="keyword">new</span> Scanner(System.in);  
        <span class="keyword">while</span>(sc.hasNext()){  
            <span class="keyword">long</span> cur=sc.nextLong();  
            <span class="keyword">if</span>(cur==<span class="number">1</span>||cur==<span class="number">2</span>)  
                System.out.println(<span class="number">1</span>);  
            <span class="keyword">else</span>{  
                Matrix base =<span class="keyword">new</span> Matrix(<span class="number">1</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">0</span>);  
                System.out.println(matrix_pow(base,cur));  
            }  

        }  

    }  
    <span class="function"><span class="keyword">static</span> Matrix <span class="title">multi</span><span class="params">(Matrix a, Matrix b)</span> </span>{    
        Matrix tmp=<span class="keyword">new</span> Matrix();  
        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) {  
            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++) {  
                tmp.m[i][j] = <span class="number">0</span>;  
                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;  k &lt; <span class="number">2</span>; k++)  
                    tmp.m[i][j] = (tmp.m[i][j] + a.m[i][k] * b.m[k][j]) % MOD;  
            }  
        }  
        <span class="keyword">return</span> tmp;  
    }  

    <span class="function"><span class="keyword">static</span> <span class="keyword">long</span> <span class="title">matrix_pow</span><span class="params">(Matrix a, <span class="keyword">long</span> n)</span> </span>{     
        ans.m[<span class="number">0</span>][<span class="number">0</span>] = ans.m[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;    
        ans.m[<span class="number">0</span>][<span class="number">1</span>] = ans.m[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;  
        <span class="keyword">while</span>(n!=<span class="number">0</span>) {  
            <span class="keyword">if</span>((n &amp; <span class="number">1</span>)!=<span class="number">0</span>) ans = multi(ans, a);  
            a = multi(a, a);  
            n &gt;&gt;= <span class="number">1</span>;  
        }  
        <span class="keyword">return</span> ans.m[<span class="number">0</span>][<span class="number">1</span>];  
    }  

    }  
<span class="class"><span class="keyword">class</span> <span class="title">Matrix</span></span>{  
    <span class="keyword">long</span>[][] m;  
    Matrix(){  
        <span class="keyword">this</span>.m=<span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">2</span>][<span class="number">2</span>];  
        }  
    Matrix(<span class="keyword">long</span> a,<span class="keyword">long</span> b,<span class="keyword">long</span> c,<span class="keyword">long</span> d){  
        <span class="keyword">this</span>.m=<span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">2</span>][<span class="number">2</span>];  
        <span class="keyword">this</span>.m[<span class="number">0</span>][<span class="number">0</span>]=a;  
        <span class="keyword">this</span>.m[<span class="number">0</span>][<span class="number">1</span>]=b;  
        <span class="keyword">this</span>.m[<span class="number">1</span>][<span class="number">0</span>]=c;  
        <span class="keyword">this</span>.m[<span class="number">1</span>][<span class="number">1</span>]=d;  

        }  
}
</code></pre>
<p><font color="#FF0000" size="4"><br>算了再来发C++:<br>Code:<br></font></p>
<pre><code class="c++"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span>  </span>
<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span>  </span>
<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span>  </span>
<span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span>  </span>
<span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  

<span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> MOD = <span class="number">100000007</span>;  

<span class="keyword">struct</span> matrix {      
    <span class="keyword">long</span> <span class="keyword">long</span> m[<span class="number">2</span>][<span class="number">2</span>];  
}ans;  

matrix base = {<span class="number">1</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">0</span>};   

<span class="function">matrix <span class="title">multi</span><span class="params">(matrix a, matrix b)</span> </span>{    
    matrix tmp;  
    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) {  
        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++) {  
            tmp.m[i][j] = <span class="number">0</span>;  
            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;  k &lt; <span class="number">2</span>; k++)  
                tmp.m[i][j] = (tmp.m[i][j] + a.m[i][k] * b.m[k][j]) % MOD;  
        }  
    }  
    <span class="keyword">return</span> tmp;  
}  

<span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">matrix_pow</span><span class="params">(matrix a, <span class="keyword">long</span> <span class="keyword">long</span> n)</span> </span>{     
    ans.m[<span class="number">0</span>][<span class="number">0</span>] = ans.m[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;    
    ans.m[<span class="number">0</span>][<span class="number">1</span>] = ans.m[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;  
    <span class="keyword">while</span>(n) {  
        <span class="keyword">if</span>(n &amp; <span class="number">1</span>) ans = multi(ans, a);  
        a = multi(a, a);  
        n &gt;&gt;= <span class="number">1</span>;  
    }  
    <span class="keyword">return</span> ans.m[<span class="number">0</span>][<span class="number">1</span>];  
}  

<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{  
    <span class="keyword">long</span> <span class="keyword">long</span> n;  
    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n) {  
        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, matrix_pow(base, n));  
    }  
    <span class="keyword">return</span> <span class="number">0</span>;  
}
</code></pre>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Text Document Analysis Codeforces Round#375-B]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/Text-Document-Analysis-Codeforces-Round-375-B/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><font color="#6495ED" size="5" face="微软雅黑">B. Text Document Analysis</font></p>
<p><font color="#008000" size="4" face="微软雅黑">time limit per test 1 second memory limit per test 256 megabytes<br>input standard input output standard output</font><br>Modern text editors usually show some information regarding the document being edited. <a id="more"></a>For example, the number of words, the number of pages, or the number of characters.</p>
<p>In this problem you should implement the similar functionality.<br>You are given a string which only consists of:<br>uppercase and lowercase English letters,<br>underscore symbols (they are used as separators),<br>parentheses (both opening and closing).<br>It is guaranteed that each opening parenthesis has a succeeding closing parenthesis. Similarly, each closing parentheses has a preceding opening parentheses matching it. For each pair of matching parentheses there are no other parenthesis between them. In other words, each parenthesis in the string belongs to a matching “opening-closing” pair, and such pairs can’t be nested.<br>For example, the following string is valid: “_Hello_Vasya(and<em>Petya)__bye</em>(and_OK)”.<br>Word is a maximal sequence of consecutive letters, i.e. such sequence that the first character to the left and the first character to the right of it is an underscore, a parenthesis, or it just does not exist. For example, the string above consists of seven words: “Hello”, “Vasya”, “and”, “Petya”, “bye”, “and” and “OK”. Write a program that finds:<br>the length of the longest word outside the parentheses (print 0, if there is no word outside the parentheses),<br>the number of words inside the parentheses (print 0, if there is no word inside the parentheses).<br>Input<br>The first line of the input contains a single integer n (1 ≤ n ≤ 255) — the length of the given string. The second line contains the string consisting of only lowercase and uppercase English letters, parentheses and underscore symbols.<br>Output<br>Print two space-separated integers:<br>the length of the longest word outside the parentheses (print 0, if there is no word outside the parentheses),<br>the number of words inside the parentheses (print 0, if there is no word inside the parentheses).<br>Examples<br>input<br>37<br>_Hello_Vasya(and<em>Petya)__bye</em>(and_OK)<br>output<br>5 4</p>
<p>input<br>37<br><em>a</em>(_b<strong>_c)</strong>de<em>f(g</em>)<strong>h</strong>i(j_k_l)m__<br>output<br>2 6</p>
<p>input<br>27<br>(LoooonG)<strong>shOrt</strong>(LoooonG)<br>output<br>5 2</p>
<p>input<br>5<br>(___)<br>output<br>0 0</p>
<p>Note<br>In the first sample, the words “Hello”, “Vasya” and “bye” are outside any of the parentheses, and the words “and”, “Petya”, “and” and “OK” are inside. Note, that the word “and” is given twice and you should count it twice in the answer.<br>such sequence that the first character to the left and the first character to the right of it is an underscore, a parenthesis, or it just does not exist. </p>
<p><font color="#FF0000" size="4">单词可以左右没有括号和下划线，注意不要理解错题意！</font><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.*;  </div><div class="line"><span class="keyword">import</span> java.util.*;  </div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;  </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </div><div class="line">        Scanner sc=<span class="keyword">new</span> Scanner(System.in);  </div><div class="line">        <span class="keyword">int</span> n=sc.nextInt();  </div><div class="line">        String s=sc.next();  </div><div class="line">        <span class="keyword">int</span> flag1=<span class="number">0</span>;  </div><div class="line">        <span class="keyword">int</span> flag2=<span class="number">0</span>;  </div><div class="line">        <span class="keyword">int</span> flag3=<span class="number">0</span>;  </div><div class="line">        <span class="keyword">int</span> max=-<span class="number">1</span>;  </div><div class="line">        <span class="keyword">int</span> cur=<span class="number">0</span>;  </div><div class="line">        <span class="keyword">int</span> cur2=<span class="number">0</span>;  </div><div class="line">        <span class="keyword">int</span> number=<span class="number">0</span>;  </div><div class="line">        <span class="keyword">boolean</span> start=<span class="keyword">false</span>;  </div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;  </div><div class="line">              </div><div class="line">            <span class="keyword">if</span>(flag2==<span class="number">0</span>)&#123;  </div><div class="line">                <span class="keyword">if</span>(isAlpha(s.charAt(i)))&#123;  </div><div class="line">                    cur++;  </div><div class="line">                    <span class="comment">//System.out.println(cur);  </span></div><div class="line">                &#125;  </div><div class="line">                <span class="keyword">if</span>(cur&gt;<span class="number">0</span>&amp;&amp;s.charAt(i)==<span class="string">'_'</span>)&#123;  </div><div class="line">                    max=Math.max(max, cur);  </div><div class="line">                    cur=<span class="number">0</span>;  </div><div class="line">                &#125;  </div><div class="line">                <span class="keyword">if</span>(cur&gt;<span class="number">0</span>&amp;&amp;s.charAt(i)==<span class="string">'('</span>)&#123;  </div><div class="line">                    max=Math.max(max, cur);  </div><div class="line">                    cur=<span class="number">0</span>;  </div><div class="line">                &#125;  </div><div class="line">                  </div><div class="line">                &#125;  </div><div class="line">            <span class="keyword">if</span>(flag2==<span class="number">1</span>)&#123;  </div><div class="line">                <span class="keyword">if</span>(isAlpha(s.charAt(i)))&#123;  </div><div class="line">                    cur2++;  </div><div class="line">                &#125;  </div><div class="line">                <span class="keyword">if</span>(s.charAt(i)==<span class="string">'_'</span>||s.charAt(i)==<span class="string">')'</span>)&#123;  </div><div class="line">                    <span class="keyword">if</span>(cur2&gt;<span class="number">0</span>)&#123;  </div><div class="line">                        number++;  </div><div class="line">                        cur2=<span class="number">0</span>;  </div><div class="line">                    &#125;  </div><div class="line">                <span class="keyword">if</span>(s.charAt(i)==<span class="string">')'</span>)&#123;  </div><div class="line">                    flag2=<span class="number">0</span>;  </div><div class="line">                &#125;  </div><div class="line">                &#125;  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">if</span>(s.charAt(i)==<span class="string">'('</span>)&#123;  </div><div class="line">                flag2=<span class="number">1</span>;  </div><div class="line">            &#125;  </div><div class="line">              </div><div class="line">              </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">if</span>(cur&gt;<span class="number">0</span>)&#123;  </div><div class="line">            max=Math.max(max, cur);  </div><div class="line">            cur=<span class="number">0</span>;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">if</span>(max==-<span class="number">1</span>)&#123;  </div><div class="line">            System.out.print(<span class="number">0</span>+<span class="string">" "</span>);  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">else</span>  </div><div class="line">        System.out.print(max+<span class="string">" "</span>);  </div><div class="line">        System.out.println(number);  </div><div class="line">    &#125;  </div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isAlpha</span><span class="params">(<span class="keyword">char</span> a)</span></span>&#123;  </div><div class="line">    <span class="keyword">if</span>((a&gt;=<span class="string">'A'</span>&amp;&amp;a&lt;=<span class="string">'Z'</span>)||(a&gt;=<span class="string">'a'</span>&amp;&amp;a&lt;=<span class="string">'z'</span>))&#123;  </div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">else</span>  </div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;  </div><div class="line">&#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[The New Year: Meeting Friends Codeforces Round#375-A]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/The-New-Year-Meeting-Friends-Codeforces-Round-375-A/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><font color="#6495ED" size="5" face="微软雅黑">A. The New Year: Meeting Friends</font></p>
<p><font color="#008000" size="4" face="微软雅黑">time limit per test 1 second memory limit per test 256 megabytes<br>input standard input output standard output</font><br>There are three friend living on the straight line Ox in Lineland. <a id="more"></a>The first friend lives at the point x1, the second friend lives at the pointx2, and the third friend lives at the point x3. They plan to celebrate the New Year together, so they need to meet at one point. What is the minimum total distance they have to travel in order to meet at some point and celebrate the New Year?</p>
<p>It’s guaranteed that the optimal answer is always integer.<br>Input<br>The first line of the input contains three distinct integers x1, x2 and x3 (1 ≤ x1, x2, x3 ≤ 100) — the coordinates of the houses of the first, the second and the third friends respectively.<br>Output<br>Print one integer — the minimum total distance the friends need to travel in order to meet together.<br>Examples<br>input<br>7 1 4<br>output<br>6<br>input<br>30 20 10<br>output<br>20<br>Note<br>In the first sample, friends should meet at the point 4. Thus, the first friend has to travel the distance of 3 (from the point 7 to the point 4), the second friend also has to travel the distance of 3 (from the point 1 to the point 4), while the third friend should not Go anywhere because he lives at the point 4.</p>
<p><font color="#FF0000" size="4">一条直线上三点距离最短，那么肯定在最小和最大的之间，而最小点和最大点在中间相遇的距离是固定的，所以答案就是最大点减去最小点。<br>code：</font><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.*;  </div><div class="line"><span class="keyword">import</span> java.util.*;  </div><div class="line">  </div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;  </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </div><div class="line">    Scanner sc=<span class="keyword">new</span> Scanner(System.in);  </div><div class="line">    <span class="keyword">while</span>(sc.hasNext())&#123;  </div><div class="line">        <span class="keyword">int</span> min=<span class="number">101</span>;  </div><div class="line">        <span class="keyword">int</span> max=-<span class="number">1</span>;  </div><div class="line">        <span class="keyword">int</span> a=sc.nextInt();  </div><div class="line">        <span class="keyword">if</span>(a&lt;min)&#123;  </div><div class="line">            min=a;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">if</span>(a&gt;max)&#123;  </div><div class="line">            max=a;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">int</span> b=sc.nextInt();  </div><div class="line">        <span class="keyword">if</span>(b&lt;min)&#123;  </div><div class="line">            min=b;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">if</span>(b&gt;max)&#123;  </div><div class="line">            max=b;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">int</span> c=sc.nextInt();  </div><div class="line">        <span class="keyword">if</span>(c&lt;min)&#123;  </div><div class="line">            min=c;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">if</span>(c&gt;max)&#123;  </div><div class="line">            max=c;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">int</span> da=max-min;  </div><div class="line">        System.out.println(da);  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Verse Pattern Codeforces Intel Round-B]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/Verse-Pattern-Codeforces-Intel-Round-B/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><font color="#6495ED" size="5" face="微软雅黑">B. Verse Pattern</font></p>
<p><font color="#008000" size="4" face="微软雅黑">time limit per test 1 second memory limit per test 256 megabytes<br>input standard input output standard output</font><br>You are given a text consisting of n lines.<a id="more"></a> Each line contains some space-separated words, consisting of lowercase English letters.</p>
<p>We define a syllable as a string that contains exactly one vowel any arbitrary number (possibly none) of consonants. In English alphabet following letters are considered to be vowels: ‘a’, ‘e’, ‘i’, ‘o’, ‘u’ and ‘y’.<br>Each word of the text that contains at least one vowel can be divided into syllables. Each character should be a part of exactly one syllable. For example, the word “mamma” can be divided into syllables as “ma” and “mma”, “mam” and “ma”, and “mamm” and “a”. Words that consist of only consonants should be ignored.<br>The verse patterns for the given text is a sequence of n integers p1, p2, …, pn. Text matches the given verse pattern if for each i from 1to n one can divide words of the i-th line in syllables in such a way that the total number of syllables is equal to pi.<br>You are given the text and the verse pattern. Check, if the given text matches the given verse pattern.<br>Input<br>The first line of the input contains a single integer n (1 ≤ n ≤ 100) — the number of lines in the text.<br>The second line contains integers p1, …, pn (0 ≤ pi ≤ 100) — the verse pattern.<br>Next n lines contain the text itself. Text consists of lowercase English letters and spaces. It’s guaranteed that all lines are non-empty, each line starts and ends with a letter and words are separated by exactly one space. The length of each line doesn’t exceed 100characters.<br>Output<br>If the given text matches the given verse pattern, then print “YES” (without quotes) in the only line of the output. Otherwise, print “NO” (without quotes).<br>Examples<br>input<br>3<br>2 2 3<br>intel<br>code<br>ch allenge<br>output<br>YES<br>input<br>4<br>1 2 3 1<br>a<br>bcdefghi<br>jklmnopqrstu<br>vwxyz<br>output<br>NO<br>input<br>4<br>13 11 15 15<br>to be or not to be that is the question<br>whether tis nobler in the mind to suffer<br>the slings and arrows of outrageous fortune<br>or to take arms against a sea of troubles<br>output<br>YES<br>Note<br>In the first sample, one can split words into syllables in the following way:<br>in-tel<br>co-de<br>ch al-len-ge<br>Since the word “ch” in the third line doesn’t contain vowels, we can ignore it. As the result we get 2 syllabels in first two lines and 3syllables in the third one.</p>
<p><font color="#FF0000" size="4">统计一下元音字母个数即可，注意一个syllable只能有一个元音，所以数量相等就能通过，而不等就不行，水题</font><br>code：</p>
<pre><code class="java"><span class="keyword">import</span> java.io.*;  
<span class="keyword">import</span> java.util.*;  

<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{  

    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{  
    Scanner sc=<span class="keyword">new</span> Scanner(System.in);  
    <span class="keyword">while</span>(sc.hasNext()){  
        <span class="keyword">int</span> n=sc.nextInt();  
        <span class="keyword">int</span>[]jl=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">10</span>];  
        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++){  
            jl[i]=sc.nextInt();  
        }  
        sc.nextLine();  
        <span class="keyword">boolean</span> flag=<span class="keyword">true</span>;  
        String []s=<span class="keyword">new</span> String[n+<span class="number">10</span>];  
        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++){  
            s[i]=sc.nextLine();  
            <span class="comment">//System.out.println(s[i]);  </span>
            <span class="comment">//System.out.println(s[i]);  </span>
            <span class="keyword">int</span> js=<span class="number">0</span>;  
            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;s[i].length();j++){  
                <span class="keyword">if</span>((s[i].charAt(j)==<span class="string">'a'</span>||s[i].charAt(j)==<span class="string">'e'</span>||s[i].charAt(j)==<span class="string">'i'</span>||s[i].charAt(j)==<span class="string">'o'</span>||s[i].charAt(j)==<span class="string">'u'</span>||s[i].charAt(j)==<span class="string">'y'</span>)){  
                    js++;  
                }  

            }  
            <span class="keyword">if</span>(js!=jl[i]){  
                flag=<span class="keyword">false</span>;  

            }  
            <span class="comment">//System.out.println(js);  </span>
        }  
        <span class="keyword">if</span>(flag==<span class="keyword">true</span>){  
            System.out.println(<span class="string">"YES"</span>);  
        }  
        <span class="keyword">else</span>  
            System.out.println(<span class="string">"NO"</span>);  
    }  

    }  

}
</code></pre>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Broken Clock Codeforces Intel Round-A]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/Broken-Clock-Codeforces-Intel-Round-A/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><font color="#6495ED" size="5" face="微软雅黑">A. Broken Clock</font><br><font color="#008000" size="4" face="微软雅黑">time limit per test 1 second memory limit per test 256 megabytes<br>input standard input output standard output</font><br>You are given a broken clock.<a id="more"></a> You know, that it is supposed to show time in 12- or 24-hours HH:MM format. In 12-hours format hours change from 1 to 12, while in 24-hours it changes from 0 to 23. In both formats minutes change from 0 to 59.<br><br>You are given a time in format HH:MM that is currently displayed on the broken clock. Your goal is to change minimum number of digits in order to make clocks display the correct time in the given format.<br>For example, if 00:99 is displayed, it is enough to replace the second 9 with 3 in order to get 00:39 that is a correct time in 24-hours format. However, to make 00:99 correct in 12-hours format, one has to change at least two digits. Additionally to the first change one can replace the second 0 with 1 and obtain 01:39.<br>Input<br>The first line of the input contains one integer 12 or 24, that denote 12-hours or 24-hours format respectively.<br>The second line contains the time in format HH:MM, that is currently displayed on the clock. First two characters stand for the hours, while next two show the minutes.<br>Output<br>The only line of the output should contain the time in format HH:MM that is a correct time in the given format. It should differ from the original in as few positions as possible. If there are many optimal solutions you can print any of them.<br>Examples<br>input<br>24<br>17:30<br>output<br>17:30<br>input<br>12<br>17:30<br>output<br>07:30<br>input<br>24<br>99:99<br>output<br>09:09<br><font color="#FF0000" size="4"><br>注意 如果你是通过改十位的话 注意12的时候 50：00 要变成 01：00<br>code：</font>

<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.*;  </div><div class="line"><span class="keyword">import</span> java.util.*;  </div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;  </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </div><div class="line">        Scanner sc=<span class="keyword">new</span> Scanner(System.in);  </div><div class="line">        <span class="keyword">while</span>(sc.hasNext())&#123;  </div><div class="line">            <span class="keyword">int</span> n=sc.nextInt();  </div><div class="line">            String cur=sc.next();  </div><div class="line">            <span class="keyword">int</span> a=cur.charAt(<span class="number">1</span>)-<span class="string">'0'</span>+<span class="number">10</span>*(cur.charAt(<span class="number">0</span>)-<span class="string">'0'</span>);  </div><div class="line">            <span class="keyword">int</span> b=cur.charAt(<span class="number">4</span>)-<span class="string">'0'</span>+<span class="number">10</span>*(cur.charAt(<span class="number">3</span>)-<span class="string">'0'</span>);  </div><div class="line">            <span class="keyword">if</span>(n==<span class="number">12</span>)&#123;  </div><div class="line">                <span class="keyword">if</span>(a==<span class="number">0</span>)&#123;  </div><div class="line">                    ++a;  </div><div class="line">                &#125;  </div><div class="line">                <span class="keyword">while</span>(a&gt;<span class="number">12</span>)&#123;  </div><div class="line">                    a=a-<span class="number">10</span>;  </div><div class="line">                &#125;  </div><div class="line">                <span class="keyword">while</span>(b&gt;=<span class="number">60</span>)&#123;  </div><div class="line">                    b=b-<span class="number">10</span>;  </div><div class="line">                &#125;  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">else</span>&#123;  </div><div class="line">                <span class="keyword">while</span>(a&gt;<span class="number">23</span>)&#123;  </div><div class="line">                    a=a-<span class="number">10</span>;  </div><div class="line">                &#125;  </div><div class="line">                <span class="keyword">while</span>(b&gt;<span class="number">59</span>)&#123;  </div><div class="line">                    b=b-<span class="number">10</span>;  </div><div class="line">                &#125;  </div><div class="line">            &#125;  </div><div class="line">            System.out.printf(<span class="string">"%02d:%02d\n"</span>,a,b);  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Passwords Codeforces Round#374-B]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/Passwords-Codeforces-Round-374-B/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><font color="#6495ED" size="5" face="微软雅黑">B. Passwords</font></p>
<p><font color="#008000" size="4" face="微软雅黑">time limit per test 2 seconds memory limit per test 256 megabytes<br>input standard input output standard output</font><br>Vanya is managed to enter his favourite site Codehorses.<a id="more"></a> Vanya uses n distinct passwords for sites at all, however he can’t remember which one exactly he specified during Codehorses registration.</p>
<p>Vanya will enter passwords in order of non-decreasing their lengths, and he will enter passwords of same length in arbitrary order. Just when Vanya will have entered the correct password, he is immediately authorized on the site. Vanya will not enter any password twice.<br>Entering any passwords takes one second for Vanya. But if Vanya will enter wrong password k times, then he is able to make the next try only 5 seconds after that. Vanya makes each try immediately, that is, at each moment when Vanya is able to enter password, he is doing that.<br>Determine how many seconds will Vanya need to enter Codehorses in the best case for him (if he spends minimum possible number of second) and in the worst case (if he spends maximum possible amount of seconds).<br>Input<br>The first line of the input contains two integers n and k (1 ≤ n, k ≤ 100) — the number of Vanya’s passwords and the number of failed tries, after which the access to the site is blocked for 5 seconds.<br>The next n lines contains passwords, one per line — pairwise distinct non-empty strings consisting of latin letters and digits. Each password length does not exceed 100 characters.<br>The last line of the input contains the Vanya’s Codehorses password. It is guaranteed that the Vanya’s Codehorses password is equal to some of his n passwords.<br>Output<br>Print two integers — time (in seconds), Vanya needs to be authorized to Codehorses in the best case for him and in the worst case respectively.<br>Examples<br>input<br>5 2<br>cba<br>abc<br>bb1<br>abC<br>ABC<br>abc<br>output<br>1 15<br>input<br>4 100<br>11<br>22<br>1<br>2<br>22<br>output<br>3 4<br>Note<br>Consider the first sample case. As soon as all passwords have the same length, Vanya can enter the right password at the first try as well as at the last try. If he enters it at the first try, he spends exactly 1 second. Thus in the best case the answer is 1. If, at the other hand, he enters it at the last try, he enters another 4 passwords before. He spends 2 seconds to enter first 2 passwords, then he waits 5 seconds as soon as he made 2 wrong tries. Then he spends 2 more seconds to enter 2 wrong passwords, again waits 5 seconds and, finally, enters the correct password spending 1 more second. In summary in the worst case he is able to be authorized in 15 seconds.<br>Consider the second sample case. There is no way of entering passwords and get the access to the site blocked. As soon as the required password has length of 2, Vanya enters all passwords of length 1 anyway, spending 2 seconds for that. Then, in the best case, he immediately enters the correct password and the answer for the best case is 3, but in the worst case he enters wrong password of length 2 and only then the right one, spending 4 seconds at all.</p>
<p><font color="#FF0000" size="4">水题 下面展示了两种计数的方式 一种模拟 一种直接计算（其实是我一开始脑抽了0.0Set也是。。抽了好几下就没改过来。。）</font><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.*;  </div><div class="line"><span class="keyword">import</span> java.util.*;  </div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;  </div><div class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MyString</span> <span class="keyword">implements</span> <span class="title">Comparable</span></span>&#123;  </div><div class="line">    MyString(String s)&#123;  </div><div class="line">        string=s;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">private</span> String string;  </div><div class="line">    <span class="meta">@Override</span>  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Object arg0)</span> </span>&#123;  </div><div class="line">        MyString s=(MyString)arg0;  </div><div class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.string.length()&lt;s.string.length()) <span class="keyword">return</span> -<span class="number">1</span>;  </div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.string.length()&gt;s.string.length()) <span class="keyword">return</span> <span class="number">1</span>;  </div><div class="line">        <span class="keyword">else</span>&#123;  </div><div class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.string.compareTo(s.string)&lt;<span class="number">0</span>) <span class="keyword">return</span> -<span class="number">1</span>;  </div><div class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">&#125;  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </div><div class="line">        Scanner sc=<span class="keyword">new</span> Scanner(System.in);  </div><div class="line">        <span class="keyword">while</span>(sc.hasNext())&#123;  </div><div class="line">            <span class="keyword">int</span> n=sc.nextInt();  </div><div class="line">            <span class="keyword">int</span> k=sc.nextInt();  </div><div class="line">            <span class="keyword">int</span> min=<span class="number">0</span>;  </div><div class="line">            <span class="keyword">int</span> max=<span class="number">0</span>;  </div><div class="line">            TreeSet&lt;MyString&gt;set=<span class="keyword">new</span> TreeSet&lt;MyString&gt;();  </div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;  </div><div class="line">                set.add(<span class="keyword">new</span> MyString(sc.next()));  </div><div class="line">            &#125;  </div><div class="line">            String answer=sc.next();  </div><div class="line">            Iterator&lt;MyString&gt; i=set.iterator();  </div><div class="line">            <span class="keyword">int</span> js=<span class="number">0</span>;  </div><div class="line">            <span class="keyword">boolean</span> flag1=<span class="keyword">false</span>;  </div><div class="line">            <span class="comment">//boolean flag2=false;  </span></div><div class="line">            <span class="keyword">int</span> gs=<span class="number">0</span>;  </div><div class="line">            <span class="keyword">if</span>(set.first().string.length()==answer.length())&#123;  </div><div class="line">                min=<span class="number">1</span>;  </div><div class="line">                flag1=<span class="keyword">true</span>;  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">while</span>(i.hasNext())&#123;  </div><div class="line">                MyString s=i.next();  </div><div class="line">                <span class="keyword">if</span>(s.string.length()&lt;=answer.length())&#123;  </div><div class="line">                    gs++;  </div><div class="line">                &#125;  </div><div class="line">                <span class="keyword">if</span>(flag1==<span class="keyword">false</span>)&#123;  </div><div class="line">                    <span class="keyword">if</span>(s.string.length()==answer.length())&#123;  </div><div class="line">                        min++;  </div><div class="line">                        flag1=<span class="keyword">true</span>;  </div><div class="line">                    &#125;  </div><div class="line">                    <span class="keyword">else</span>&#123;  </div><div class="line">                        min++;  </div><div class="line">                        js++;  </div><div class="line">                        <span class="keyword">if</span>(js==k)&#123;  </div><div class="line">                            min=min+<span class="number">5</span>;  </div><div class="line">                            js=<span class="number">0</span>;  </div><div class="line">                        &#125;  </div><div class="line">                    &#125;  </div><div class="line">                &#125;  </div><div class="line">            &#125;  </div><div class="line">            gs=gs-<span class="number">1</span>;  </div><div class="line">            max=gs+gs/k*<span class="number">5</span>+<span class="number">1</span>;  </div><div class="line">            System.out.print(min+<span class="string">" "</span>+max);  </div><div class="line">        &#125;  </div><div class="line">  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[异或交换两数的陷阱]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/%E5%BC%82%E6%88%96%E4%BA%A4%E6%8D%A2%E4%B8%A4%E6%95%B0%E7%9A%84%E9%99%B7%E9%98%B1/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><font color="#6495ED" size="5" face="微软雅黑">以下是错误代码：</font><br><a id="more"></a><br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div></pre></td><td class="code"><pre><div class="line">import java.io.*;  </div><div class="line">import java.util.*;  </div><div class="line">  </div><div class="line">public class Main &#123;  </div><div class="line">  </div><div class="line">    public static void main(String[] args) &#123;  </div><div class="line">        long []shu=&#123;1,2,4,3,5,2,432,5,32,41,2&#125;;  </div><div class="line">        quickSort(shu,0,shu.length-1);  </div><div class="line">        for(long a:shu)&#123;  </div><div class="line">            System.out.print(a+" ");  </div><div class="line">        &#125;  </div><div class="line">          </div><div class="line">    &#125;  </div><div class="line">    public static void swap(long []shu,int a,int b)&#123;  </div><div class="line">        /*long temp=shu[a]; </div><div class="line">        shu[a]=shu[b]; </div><div class="line">        shu[b]=temp;*/  </div><div class="line">        shu[a]=shu[a]^shu[b];  </div><div class="line">        shu[b]=shu[b]^shu[a];  </div><div class="line">        shu[a]=shu[a]^shu[b];  </div><div class="line">        &#125;  </div><div class="line">    public static int partition (long[]shu,int begin,int end)&#123;  </div><div class="line">        long pivot =shu[end];  </div><div class="line">        int storeindex=begin;  </div><div class="line">        for(int i=begin;i&lt;end;i++)&#123;  </div><div class="line">            if(shu[i]&lt;pivot)&#123;  </div><div class="line">                swap(shu,i,storeindex);  </div><div class="line">                storeindex++;  </div><div class="line">            &#125;  </div><div class="line">          </div><div class="line">        &#125;  </div><div class="line">        swap(shu,storeindex,end);  </div><div class="line">        return storeindex;  </div><div class="line">    &#125;  </div><div class="line">          </div><div class="line">    public static void quickSort(long []shu,int begin,int end)&#123;  </div><div class="line">        if(begin&gt;=end)&#123;  </div><div class="line">            return;  </div><div class="line">        &#125;  </div><div class="line">        else&#123;  </div><div class="line">            int mid =partition(shu,begin,end);  </div><div class="line">            quickSort(shu,begin,mid-1);  </div><div class="line">            quickSort(shu,mid+1,end);  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">&#125;  </div><div class="line">```&lt;font color=#008000&gt;</div><div class="line">output：0 2 2 0 0 4 5 0 0 0 0 </div><div class="line">为什么会这样那，因为有重复的值，在交换时出现了相当于：</div><div class="line"></div><div class="line">a=a^a;</div><div class="line"></div><div class="line">a=a^a;</div><div class="line"></div><div class="line">a=a^a;</div><div class="line"></div><div class="line">的操作，结果就变成0了。</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">以下是正确食用方法：&lt;/font&gt;</div><div class="line"></div><div class="line">```java</div><div class="line">import java.io.*;  </div><div class="line">import java.util.*;  </div><div class="line">  </div><div class="line">public class Main &#123;  </div><div class="line">  </div><div class="line">    public static void main(String[] args) &#123;  </div><div class="line">        long []shu=&#123;1,2,4,3,5,2,432,5,32,41,2&#125;;  </div><div class="line">        quickSort(shu,0,shu.length-1);  </div><div class="line">        for(long a:shu)&#123;  </div><div class="line">            System.out.print(a+" ");  </div><div class="line">        &#125;  </div><div class="line">          </div><div class="line">    &#125;  </div><div class="line">    public static void swap(long []shu,int a,int b)&#123;  </div><div class="line">        long temp=shu[a];  </div><div class="line">        shu[a]=shu[b];  </div><div class="line">        shu[b]=temp;  </div><div class="line">        /*shu[a]=shu[a]^shu[b]; </div><div class="line">        shu[b]=shu[b]^shu[a]; </div><div class="line">        shu[a]=shu[a]^shu[b];*/  </div><div class="line">        &#125;  </div><div class="line">    public static int partition (long[]shu,int begin,int end)&#123;  </div><div class="line">        long pivot =shu[end];  </div><div class="line">        int storeindex=begin;  </div><div class="line">        for(int i=begin;i&lt;end;i++)&#123;  </div><div class="line">            if(shu[i]&lt;pivot)&#123;  </div><div class="line">                swap(shu,i,storeindex);  </div><div class="line">                storeindex++;  </div><div class="line">            &#125;  </div><div class="line">          </div><div class="line">        &#125;  </div><div class="line">        swap(shu,storeindex,end);  </div><div class="line">        return storeindex;  </div><div class="line">    &#125;  </div><div class="line">          </div><div class="line">    public static void quickSort(long []shu,int begin,int end)&#123;  </div><div class="line">        if(begin&gt;=end)&#123;  </div><div class="line">            return;  </div><div class="line">        &#125;  </div><div class="line">        else&#123;  </div><div class="line">            int mid =partition(shu,begin,end);  </div><div class="line">            quickSort(shu,begin,mid-1);  </div><div class="line">            quickSort(shu,mid+1,end);  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><font color="#008000">output:1 2 2 2 3 4 5 5 32 41 432 </font>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Anatoly and Cockroaches Codeforces Round#373-B]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/Anatoly-and-Cockroaches-Codeforces-Round-373-B/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><font color="#6495ED" size="5" face="微软雅黑">B. Anatoly and Cockroaches</font></p>
<p><font color="#008000" size="4" face="微软雅黑">time limit per test 1 second<br>memory limit per test 256 megabytes<br>input standard input<br>output standard output</font><br>Anatoly lives in the university dorm as many other students do. <a id="more"></a>As you know, cockroaches are also living there together with students. Cockroaches might be of two colors: black and red. There are n cockroaches living in Anatoly’s room.<br>Anatoly just made all his cockroaches to form a single line. As he is a perfectionist, he would like the colors of cockroaches in the line toalternate. He has a can of black paint and a can of red paint. In one turn he can either swap any two cockroaches, or take any single cockroach and change it’s color.<br>Help Anatoly find out the minimum number of turns he needs to make the colors of cockroaches in the line alternate.<br>Input<br>The first line of the input contains a single integer n (1 ≤ n ≤ 100 000) — the number of cockroaches.<br>The second line contains a string of length n, consisting of characters ‘b’ and ‘r’ that denote black cockroach and red cockroach respectively.<br>Output<br>Print one integer — the minimum number of moves Anatoly has to perform in order to make the colors of cockroaches in the line to alternate.<br>Examples<br>input<br>5<br>rbbrr<br>output<br>1<br>input<br>5<br>bbbbb<br>output<br>2<br>input<br>3<br>rbr<br>output<br>0<br>Note<br>In the first sample, Anatoly has to swap third and fourth cockroaches. He needs 1 turn to do this.<br>In the second sample, the optimum answer is to paint the second and the fourth cockroaches red. This requires 2 turns.<br>In the third sample, the colors of cockroaches in the line are alternating already, thus the answer is 0.</p>
<p><font color="#FF0000" size="4"><br>题解：<br>哈哈哈博主做题时脑抽了<br> In one turn he can either swap any two cockroaches,<br> In one turn he can either swap any two cockroaches,<br> In one turn he can either swap any two cockroaches,<br>请读三遍，这是可以任意交换两个啊，博主做的时候以为只能交换相邻的…然后花式WA…<br>那么这个问题就很简单了，首先目标状态只有两种：<br>要么是rbrbrbrbrbrbrbr……<br>或者brbrbrbrbrbrbrb……<br>所以我们只要分别统计原字符串和这两个字符串有多少处错误，<br>然后<br>关键的一点：举个例子<br>原input：rrbr<br>一：对照rbrb 那么这里1，3号位错了，b1有两个错，<br>2号位错了，r1有一个错，所以我们可以交换一次rb，然后把剩下的一个b改成r<br>所以操作数为2，也就是说这种情况下答案是Math.max（b1,r1)=2。<br>二：对照brbr 0号位错了，b2有一个错，r2没有错<br>这种情况下答案是Math.max（b2,r2)=1。<br>最后两种情况下取最小就行了。</font></p>
<p>code：<br></p>
<pre><code class="java"><span class="keyword">import</span> java.io.*;  
<span class="keyword">import</span> java.util.*;  

<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{  

    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{  
    Scanner sc=<span class="keyword">new</span> Scanner(System.in);  
    <span class="keyword">while</span>(sc.hasNext()){  
        <span class="keyword">int</span> n=sc.nextInt();  
        String s1=sc.next();  
        StringBuilder s=<span class="keyword">new</span> StringBuilder(s1);  
        <span class="keyword">int</span> l=s.length();  
        <span class="keyword">int</span> count1r=<span class="number">0</span>;  
        <span class="keyword">int</span> count1b=<span class="number">0</span>;  
        <span class="comment">//count1:count for mistakes of string which is compared with rbrbrbrbrbrbrbrbrb  </span>
        <span class="keyword">int</span> count2r=<span class="number">0</span>;  
        <span class="keyword">int</span> count2b=<span class="number">0</span>;  
        <span class="comment">//count2:count for mistakes of string which is compared with brbrbrbrbrbrbrbrbr    </span>
        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;i++){  
            <span class="keyword">if</span>(i%<span class="number">2</span>!=<span class="number">0</span>){  
                <span class="keyword">if</span>(s.charAt(i)==<span class="string">'r'</span>){  
                    count1r++;  
                }  
                <span class="keyword">if</span>(s.charAt(i)==<span class="string">'b'</span>){  
                    count2b++;  
                }  
            }  
            <span class="keyword">else</span>{  
                <span class="keyword">if</span>(s.charAt(i)==<span class="string">'r'</span>){  
                    count2r++;  
                }  
                <span class="keyword">if</span>(s.charAt(i)==<span class="string">'b'</span>){  
                    count1b++;  
                }  
            }  
        }  

        System.out.println(Math.min(Math.max(count1r, count1b),Math.max(count2r, count2b)));  
        }  

    }  
}
</code></pre>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[成功的背后！（给所有IT人）（转）]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/%E6%88%90%E5%8A%9F%E7%9A%84%E8%83%8C%E5%90%8E%EF%BC%81%EF%BC%88%E7%BB%99%E6%89%80%E6%9C%89IT%E4%BA%BA%EF%BC%89%EF%BC%88%E8%BD%AC%EF%BC%89/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>转载自CSDN第3名的博主。</p>
<p><a href="http://blog.csdn.net/phphot/article/details/2187505" target="_blank" rel="external">http://blog.csdn.net/phphot/article/details/2187505</a></p>
<p>成功的背后，有着许多不为人知的故事，而正是这些夹杂着泪水和汗水的过去，才成就了一个个走向成功的普通人。<a id="more"></a></p>
<p>　　凌晨两点半，早已习惯了一个人坐在电脑前的我，望着屏幕，任思绪在暗夜的包容下静静流淌，时光仿佛又定格在三年多前的那一刻：“283 分”。那是被中国万千学子称为“黑色七月”中的一天，下班回家的母亲从家门打开后说出的一个数字，虽然早知道自己不会考上大学，但如此的成绩也多少出乎自己的意料。母亲是在单位用电话查询得知高考分数的，面对众多的同事，她几乎不敢相信自己的耳朵。而同在一张办公桌的同事：她的女儿-也是市委书记的独生女，分数是610分。<br>　　或许八十年代出生的我们身上肩负着太多的东西，父母将绝大多数的希望寄托在了这一代的身上，以至于忘记了他们所能承受的负荷，于是便有了代沟，有了反叛。而短短二十年间，神州大地又发生了太多翻天覆地的变化和对传统文化的冲击，这些前人所未能经历过的巨变真真切切的摆在了我们这一代的面前，没有休止，没有方向。我们摸索着、试探着、寻找着属于自己的道路，这期间的痛苦、欢乐、迷惘也只能由自己去体会，我们在一次次的变化中感受着，经历着，也成长着……<br>　　从何谈起呢，过去十数年的经历像一幕电影，一幕尚在上映，没有结局的悲喜剧，时间将自己由一个懵憧无知的小男孩幻化为历经沧桑世事的时代青年，它的魔力仍未消退，蹲伏在某个角落，伺机改变着你的一切……<br>　　七八岁时的我很好的继承了父亲的“愚孝”传统，在这个家族中，不善言谈，木讷呆板的我一直是亲戚们取笑的对象，奶奶也多少次对只会做事，不会说话的母亲说：你的儿子将来只能是讨饭的命，不会有任何出息。每一次，母亲都希望我能争口气，做出个样子给他们看看。可说归说，每年夏天，放学后的我都要遵从父亲的命令拎着两个大铁壶行走将近一里的路程给奶奶家打开水，冬天，每隔几天去背蜂窝煤，倒煤渣，这样的日子一直持续到高中毕业…<br>　　89年的中国正是各种“气功”风靡万千人群的时代，无数个所谓的“大师”打着“神功”，“特异功能”的幌子晃悠在各个“神坛”上，贪婪地接受着被他们蛊惑得神魂颠倒的人们送来的礼品，钱币以及所能送上的一切……<br>　　家族自然也不能免俗，亲戚们虔诚的学着各种离奇的功法，期待着特异功能的出现。堂哥收藏了一米多厚的市场上有关各气功师和特异功能的书籍，被我照单全收。对知名气功师“了如指掌”，世界各地的神秘现象诸如 “金字塔”，“百慕大”，“UFO”也是自己痴迷和研究的对象。并跟着家乡的一个赶气功潮的老中医像模像样的偷偷学起了他自称家传的“太极一元功”。<br>　　一练就是3年，其间也经历了气功潮的幻灭以及各地假气功师露出庐山真面目，被拘捕的消息，那时年少的我还很为他们鸣不平，这期间。仍然没有放弃对发明的热望，不过特异功能加上奇思妙想，可想而知当时我的脑子里尽是些什么东西。但是六年级时还是着实想出了一些有市场价值的发明，并告诉了当时还在成都科技大学读电子的表哥，记得其中一项是微型洗衣机，将洗衣机按比例缩小，专门用来洗小件衣服，最好用单片机控制各种功能（那时单片机还是高新科技，自己只是从一些专业期刊上看到过，似懂非懂的感觉能够用到洗衣机上），夏天时会很方便。遗憾的是他们对我的想法不屑一顾，自己有一种“心死”的感觉，对于发明的兴趣也由此压抑了两年。两年后，海尔出了“小神童”洗衣机，功能还是形态上与自己设想的洗衣机均毫无二致。<br>　　迷迷糊糊的上了初一，却对做一名与世无争的隐士产生了极大的兴趣，梦想通过潜心的修炼来改变或者脱离这个世界，连日记中也尽是自创的厌世诗歌和散文，有一段时间还潜心钻研如何自杀，并设计了多种无痛死去的方式，（现在想来，还真要感谢当时没有走上这条路，否则就不会有现在的我了）连日常上课时的表现都显得很神秘。语文老师将我的日记交给班主任-虽然她很欣赏我的文章，班主任把我的母亲召到学校，很紧张的问她我的精神是不是有问题（这是母亲后来告诉我的J），而直到有一天在屋内的水泥地板躺着练功时，睡着了被母亲发现，不得不中止练了三年的伪气功。后来看了司马南所著的那本“神功内幕”后，才对所谓的特异功能彻底没了兴趣。<br>　　初一下学期无意中发现一本母亲单位发的“创造学”，系统的阐述了各种创造发明的理论和实例，这本书对我的影响不亚于基督教徒手不释卷的“圣经”，曾被浇灭的热情再次死灰复燃，于是乎开始照猫画虎，在课堂上放任自己的思绪天马行空般驰聘在幻想乐园…<br>　　初中时便开始厌恶那些枯燥无味，陈旧落后的课程，面对着不断重复的考试，其中却没有一丝知识是自己感兴趣，愿意学习的。也想不出这些知识即使灌输到自己的脑子里对今后的发展会有何用？想想中国的英语教育，真正做到了从娃娃抓起，学了十几年下来，语法规章词汇倒是掌握了不少，可又有多少人能够运用英语同老外交流呢？哑巴英语、应试英语害了中国整整一代人！虽然自己现在没能体会到正在实施的素质教育，可看着依然层出不穷的少年犯罪，以及学生所背的不见减轻的书包，真的想不出也看不出素质教育的优点来-也许还要有一个接受过程吧。也或许是中国特有的教育环境，众多学生只能通过近乎惨烈的角逐，踏着大批被考试淘汰的落榜生的肩膀才能跨入理想的学校-这一切或许阻碍着中国素质教育的实施。<br>　　<br>　　学习成绩差，再加上行为古怪，性格懦弱，我在班中“理所当然”的享受着来自各方面的歧视，还记得在初三临中考时，学校为了提高中考升学率，准备将所谓的好学生和差学生隔离开来，并劝说一些中考渺茫的学生放弃考试权，只是后来，由于一些“原因”没有实施。现在想来，最遗憾的莫过于当时为何不更大胆一些，多逃些课去做更喜欢的事情。<br>　　就这样混过了三年的初中生涯，临中考前为了不致使父母太过伤心，用了半个月的功，仅差三分够上市一中的分数线–这样的分数已能进入班中的前20名。家中交了3000元赞助费让我进入了这所中学-虽然当时已经不再想上学，可不好驳回父母的意愿，只好以插班生的身份混了进去。<br>　　应该说那时依然不善言辞，木纳呆板，性格懦弱，再加上学习很差。当时的高中要求住校，同宿舍的同学没有一个人将自己当人看待，我承接了宿舍中为其他人倒洗脚水，洗袜子等诸如此类的事情，默默忍受着他们的奚落，甚至以阿Q精神安慰着自己…<br>　　96年三月十四日，无法忍受这一切的我，带着节省下来的四十元钱和自己的一些想法，以及对梦想的憧憬，希望能到国家专利局谋到一份工作，哪怕只是做杂务，只要能接触到各种专利文件和资料就行。在家中留了一封信，偷偷的坐火车来到北京，现在想来，当时也未免太过单纯，但这何尝不是一段人生体验，短短数日，真切体会到这个社会的残酷冷漠和世态炎凉：记得到北京后已经是午夜12点钟了，在候车室的大理石地板上一夜未眠，三月份的北京依然很冷。第二天一早买了份北京地图，按图索骥找到了国家专利局。并骗过门卫进入楼中，一层层的询问，终于找到了专利局局长的办公室，局长没在，当时室中有一男一女，他们随意翻了翻我的资料，给了本《专利法》就将我打发走了。心灰意冷的想既然出来，就不要再回去，可吃饭问题如何解决？<br>　　逐个询问了无数家饭店是否招勤杂工，但没有一家敢容纳–因为我没有身份证。就这样在北京流浪了四天四夜：期间被卖血者（所谓的血头）引诱过、被警察驱逐过、被街头地痞殴打过-只因为看我不顺眼、也同乞丐们睡过地下管道。那几天看透世态炎凉，心也冷了，想着一辈子也许就这样下去。<br>　　<br>　　或许是冥冥中的安排，第四天时在一个公园的长椅上休息时，遇到一位50多岁的老年人，身上的衣服已经很破，推着一辆同样破旧的自行车，见人就说“见过我儿子吗，他说来北京，我找他好几年了”，看样子已经精神失常。他看到自己时，对我说“我儿子也跟你这么大，三年前偷偷从家里跑出来，只留信说要去出去看看，我找他三年了。”就这样一遍遍重复着……<br>　　一阵心酸，也想起了自己的父母，他们是否也会这样-那样对他们而言太过残酷……我用仅剩的5元钱给家中打了个电话，是父亲接的：他问我在哪，并说：母亲已经三天没有吃饭，休息，整日以泪洗面，如果再没有消息，她会疯掉的。<br>　　那天晚上，父亲和将近70岁的舅舅连夜来到北京，他们一个候车室一个候车室的找，可因为候车室没有位子，自己是在一个饭店的柱子后面半蹲半靠的涯过夜晚-单薄的衣物抵挡不住北京深夜的严寒。<br>　　回到家中，我对父母说不想再上学，但他们还是希望能把高中读完–那一次，真的伤透他们的心，终于还是回到了学校。<br>　　最初返校的一段时间，突然对制作炸弹产生了兴趣，于是连续多半个月从市图书馆收集各种关于炸药和相关炸弹制作的资料，结合头脑中的想象和所掌握的一些化学配方以及电子知识，开始在头脑中设计各种特殊“炸弹”。或许处女座的人追求完美，哪怕是“犯罪”也不例外，那段日子头脑中的灵感层出不穷，众多独一无二的“炸弹”构思相继出笼…<br>　　也许连自己都感觉心理上有些出格，于是将市图书馆能够找到的心理学相关书籍翻了个遍，配合其中所介绍的一些方法试着去调整心态，就这样过了些日子，慢慢的恢复了正常。<br>　　很感激当时的市图书馆就在学校附近，使我总能趁课间休息溜去借书，无论是物理，化学，还是医学，文艺之类的书籍，只要觉得有用的书我都没有错过，两年多来利用上课时间翻阅了将近一千五百多册的各类藏书，而老师们多次在课上“抓住”自己，却从未没收过所读的书-没有办法，谁让自己对武侠、言情之类的小说不感兴趣呢，久之，班主任也拿我没了办法为了锻炼意志力，也为了换一个形象-同时不想再受他人的欺侮，我独自搬到一间曾经发生过火灾而无人愿住的宿舍中，面对四面漆黑的墙壁，实施着形象再造计划…<br>　　首先要克服胆小懦弱的性格，好走极端并患有轻微恐高症的我在一个夜晚溜进电视台院内，开始向上攀爬80多米高的电视塔铁架，壮着胆子爬到一半时，不自然的向下方望了一眼–四面悬空的在40米的高空，全身立刻发软，手脚也开始无意识地抖动，但仍还清醒：生或是死–此刻已经没有退路！这样约莫过了10多分钟后，终于控制住自己的身体，接着爬到了塔顶，站在顶端向下望时，再也没有先前那种眩晕感，充斥的却是前所未有的自信，那一刻，我战胜了自己！<br>　　在宿舍内自制了一些粗陋的健身器材，并结合买回的关于散打和截拳道的书籍，开始习武，并坚持着每日冲冷水澡，以至于后来全校都知道有个下雪天还在洗冷水澡的怪人，为了下课后能够抢先打饭，时常从二楼阳台纵身跃下…… 日子就这样一天天过去，身体日益健壮，渐渐地也并不在乎旁人的评论和蔑视，我试着超越自己…<br>　　高中的日子也有不少小插曲，曾经在看过一本美国人写的孤身大海飘游的小说后，对挑战人体极限发生了兴趣，于是找来不少医学资料，做了一番准备后，决定一个星期内不进食，同时也不饮水-资料表明：在较寒冷的环境中，如果不喝水人可以活六天。我选定了在96年11月份的一个星期一开始（当然是要瞒着家人了），并且照常上学-初衷是为了让自己在将来出现此类特殊情况时心中有数，不至于因为绝望而死，试验的前三天，我详细记下了每天的活动量和排泄情况，并大致计算着由此损耗的热量，第三天中午时，几乎坚持不住的想饮水，而胃也在不停的抽搐，走路时如同脚踩棉花一般，我咬牙坚持了下来。第四天时，不仅大小便已经停止排泄（这对肾的损害相当大，后来由此剩下的饭钱全部换成了药品，所幸的是自己的诊断还算对路，试验并未对身体造成太大伤害），而且不再感到渴，也没有了饥饿的感觉，头脑中一片宁静安详的感觉，到了第六日，走路时全然没有了感觉，旁人的对话仿佛来自很遥远的地方，我知道已经接近生死边缘，晚上终于中止了这场实验，那几天瘦了七斤。试验的六日内总共吃了大半块馒头，350ml的水（用量杯精确测定），并得到一个较为满意的结果。BTW：从前的我易走极端，请各位千万不要重复这场试验，只是希望这个数据能令您在危难状况时增加存活下去的信心。为了能够拥有自己的实验室，并且找到需要的化学药品，我千方百计的四处寻找，可惜，一个小城市中，又怎会有齐全的化学品商店呢？一个偶然的机会，在**局内部闲逛时，无意中发现一座不太起眼的二层小楼，而里面竟然有一个化学实验室，还有几个存放电子仪器的储藏室，平常没有人进出。想进入这些房间对我而言并非难事，略施小计便可以轻松出入-还要归功于门锁的原始：），每次并不多拿，只是带走少量的化学药品。或许是一些药品的奇怪缺失引起了他们的注意，一次想取些药品时，感觉有些不太对劲，仔细观察才发觉安装了红外报警器。于是回去花了一个星期研究，防盗设备，并购买了类似的报警器材做试验，找到了破解方法，也得到了需要的化学药品–这段经历或许奠定了自己后来的黑客基础J.事先声明：我并未对实验室造成任何损害，所窃得的化学药品总值也未超过50元-只不过市场很难买到才出此下策。高中时留下较深印象的当属做不完的作业以及答不完的试卷，看不完的课外辅导书。一上课，试卷便铺天盖地而来，自习课时更是如此，各科老师走马灯般发着试卷，每一个都声称很重要。虽然自己可以享受不交作业的“特权”–老师们完全放弃了对我的管束-他们已无能为力，看着周围的同学起劲儿作着毫无用处的作业，心里不由得想笑，也只是苦笑–这一切并非自愿，而仅仅是为了能够将来混入一所大学。至今仍感到纳闷的是：如果需要，当时的我可以弄懂最专业的科技论文，却对课本上的内容始终无法记住。现在想来，这或许是“兴趣是最好的导师”的最佳例证J，其中也有逆反心理在做崇。高中三年，同学之间没有友情，有的也只是相互竞争和压轧，每个人都知道，名额有限，如果希望升入大学，你不得不尽力去超过你周围的同学。这些本不该是我们这个年龄段所应该承受的，可现实就是如此残酷，对于众多农村学子而言–如果希望过得更好，考大学只能是唯一的出路（但事实果真如此吗？大学毕业后仍将要面对这个社会惨烈的竞争，我们这代人始终无法轻松）。这是身处大城市的考生所无法体会的（不平等的分数线能令他们较轻松进入大学校园，如果说这也是一种不平等的话，那也只能说是见怪不怪了）。于是每年临近高考，便不时会听到因不堪承受过重心理压力的高考应届生自杀或进入精神病院的消息。更可悲的是这类消息并不会在考生中引起反响-他们早已麻木。置身事外的我（本就不想考学，也就没有那样的压力）平静的看着这一切，也试图找出一个答案 -你能告诉我吗？<br>　　很快三年过去，也迎来了不得不参加的高考……<br>　　我永远忘记不了母亲回家后的面孔。她的脸上是一种自尊被击溃后的绝望，也隐含着对自己儿子今后命运的深深担忧-十多年辛勤付出所培养出的儿子，在一个足以决定一生命运的考试中交给她的答案。在以子女高考成绩衡量成功的小城市，这是一个难以容忍的数，意味着这个高考弃儿今后的道路将充满坎坷曲折…<br>　　本已厌倦了陈旧落后的课本知识，下决心不再上学的我，此时不敢也不能再面对母亲的眼睛。已给她太多的失望……。后来，按照父母的意愿，来到了石家庄一所计算机自学考试学校。却遇上了足以改变一生的转变……。<br>　　98年11月，17岁的我第一次在学校机房内接触了电脑，虽然仅是dos界面，虽然还对电脑一窍不通，但却不由得被这个笼罩着神秘气息的家伙征服了，也是那一刻，在内心暗暗立下了一个目标：三年内，不仅要征服电脑，还要成为这个行业最顶级的专家！?<br>　　为了找寻接触电脑的机会，记得曾经在一个星期内，连续奔波在5 个地方，趁着他们或者公司不用电脑的时候，想方设法去蹭机，并随身携带着一张光盘-我买的第一张光盘-一张关于网络入侵和软件破解的盗版光盘，面对着那里面犹如天书的教学文章，以及神秘莫测的入侵和破解软件，忘记了吃饭和睡觉，绞尽脑汁的想要去了解它们。那个星期，总共睡了不到六个小时。<br>　　那次之后，大病了一场。这场病也成了自己得以赖在病床上不受干扰看书的最好借口。为了学习软件破解-基本前提是要了解汇编语言-用了一个星期啃完并了解了IBM的那本汇编教材，又为了能够使用那些黑客程序，两个星期之内，掌握了C语言的基本编程和调试-这是在没有电脑可供使用的基础上，为了了解网络，一本本最新的网络书籍被我“蹂躏”了一遍又一遍，没有人指导，仅仅凭着兴趣，凭着想成为一名黑客的渴望，终于读懂了那些晦涩艰深的文字（这也许是早期中国电脑书籍的一个通病）。经不住我的软磨硬泡，答应在两年后买电脑的父母挤出钱来提前买了台兼容机，并放在表哥在市农行的单身宿舍中–他并不常来，某种程度上，成了自己的个人乐园。<br>　　三个月，整整三个月，一个人同电脑交流着，时间已经失去了概念，昼夜星辰的交替似乎也没有意义，饿了，去食堂吃些东西，困了，倒在电脑旁的床上打个盹，醒来后接着“交战”。至于学校，想起来的时候便回去一次，也仅仅是让班主任还记得有这个学生。结合电脑，学习了所购买的上千元的书籍和光盘。掌握了1000多种各类软件的应用，软件破解，编程等能力也有了飞跃性的提高。现在想来，那或许是自己一生中最快乐的一段时光，没有压力，没有歧视，只有兴趣和动力，疯狂地吸收着这个行业所能了解的一切。</p>
<p>99年三月份，河北微软培训中心在计算机世界打出了招收第一批学员的广告，那时还根本不知道认证的概念，仅仅<br>凭借着能够接触到真实的网络环境，以及如果通过认证后能够得到年薪10万的承诺–当然，这也仅仅是广告宣传而已。<br>便又劝说家中出钱报名参加了第一届学习班。<br>　　事隔许久，很多往事已成了过眼烟云，但一件小事却始终难忘：报名时，自己问负责人英语不太好是否也能学习，他回了一句：没关系。但好像又想起了什么，紧接着又问：你过四级了吗？那一刻，仿佛猜到了所面临的将是什么。一个高考落榜的学生想去考什么世界认证的系统工程师，这在家乡迅速传为了笑谈，回家后每个知道这个笑柄的人看待自己的眼神中都带着蔑视和不屑，我知道，已经没有了退路。<br>　　那届培训班共有58名学员，除我之外都是有着相关工作经验的本科和硕士。捧着6本砖头般的英文教材。反复闪现在脑海中的也只剩下了 “拼命”这个单词。白天，对着金山词霸翻译着书中每个不懂的单词-试图读通书中的含义，那时总结了一个包含1000多个专业术语的单词表，硬记了下来。晚上，上课时结合未在看书时搞懂的知识点，并用录音机将授课录下，回去后反复去听，去理解。两个月的培训，弄懂了每一堂课，并结识了业内的很多朋友。身上由此少了10几斤肉–或许是一个减肥的好方法。?<br>　　99年五月，我成为培训班中第二个通过MCP认证的学员-虽然仅需一门课，但也是一个好的起点，毕竟当时的石家庄没有几个人拥有该认证。兴奋地去久已未至的学校炫耀时，却被新换的班主任小心翼翼地问道：你是李明吗？待得到肯定答复后，毋庸置疑地说：你已经被学校开除了……。<br>　　刚离开学校时的我本想籍着自己的电脑能力寻找一份合适的工作，孰料在其后的多半个月中，频繁更换了3家公司，都是一些电脑代理公司，几个人便是一个组合，甚至有一家代理工控机的公司，同时竟还做着食品烹制的生意！但牛皮却还吹得很大。我知道再呆下去只会空耗时间，迅速逃离，连工资都没有去要。<br>　　还好籍着同一培训班朋友的推荐，我来到石家庄万利福超市作了一名网管，每天的工作就是维护公司办公网络，pos机的正常运营，以及unix服务器的数据备份，并利用VB和SQL程序编写一些应用和数据库查询软件，工作很是清闲，这段时间，在公司搭起了一个网络环境，闲暇时便做着教材后面的实验和网络安全的研究。当时的薪水是每月900元。<br>　　几个月很快过去，为了能够给自己一些压力，谢绝了主管的挽留，回家后准备剩余科目的考试。现在想来，在家中的那段时间，也是人生中一个很大的转折点，性格乖枭的奶奶突发脑血栓，在医院住了一个多月，爷爷也在此时凑热闹，心脏病接着发作，而父亲由于照顾他们，糖尿病上升到6个加号– 这是非常危险的信号，母亲也被累得诊断出心脏间歇（我奶奶体重有180多斤，为其每翻次身都是一个艰巨的工作），没有工作的自己却又不能帮上太多忙，准备去石家庄考试–却在公交车上将父母给的600多元考试费被小偷扒走。而借钱考试时，仅剩的一门课连考两次，竟都是仅差一分而没有通过。真切体会到了什么叫欲哭无泪！<br>　　回来后为了排解心情，总结自己接触电脑及网络一年多来的网络安全和破解经验，写了一遍两万余字的文章，被《软件》杂志发表-发表之前在杂志社引起了很大争议–先前从未刊登过类似的文章。?发表后出乎所有编辑的意料，这篇文章被评为该杂志创刊以来最受读者欢迎的文章，由此也带动了后来媒体对于黑客群体的关注-而此时，体会过人生起落的我也已经准备淡出这个圈子了。<br>　　也是这个月，再次接触到了上海博达网络设备公司的河北办事处经理，现已是博达公司的市场总监。第一次是数月前朋友引荐，当时他对我的表现并不太满意，而这次，听朋友说我已经将认证课程全部考完，他很欣赏我的毅力，于是，顺利进入了这家公司，并成为路由器行业内年龄最小也是学历最低的工程师。负责河北和内蒙古两省内公司所售路由器的安装维护和调试。由于学历的缘故，薪水被定为1500元，这几乎是公司薪资标准的最底线。<br>　　2000年三月的一个深夜，经理打电话说邢台电信局所用的一台我们的路由器出了些问题，要求立刻过去，连夜用了100多元打车去了邢台，到电信局时已经是12点多了，故障是cisco的7507和我们的路由器无法互通，那是自己第一次独自出差，也是第一次见到cisco的路由器，此前在公司培训时仅仅知道cisco是我们的竞争对手，面对着几乎完全陌生的命令行和设备，有些束手无策。无奈之下长途唤醒了上海总部的技术主管，在他一步步的提示和帮助下，第二天早上7点钟前终于排除了故障。而如果故障在7点后仍无法排除的话，那客户的损失就将以6位数来计算了，什么是压力？这就是压力！<br>　　以后的日子便是在频繁的出差中度过，除了排除故障，还要承担给客户培训和方案编写方面的任务，以及跟随主管陪同一些主要客户（这段日子为后来的工作奠定了良好的基础，也很大程度上锻炼了各方面的素质），没有任务时便在国贸中心的办事处准备着MCSD和MCDBA的考试，由于曾经的黑客经历， VB语言以及SQL数据库的编程并不是太大的难题-这总要比汇编容易得多。一门心思的准备着考试-至于娱乐和休闲，就让它们见鬼去吧，那时根本没有时间去想这些东西。<br>　　5月份的时候才了解到cisco的认证体系，不知天高地厚的我对这套认证又发生了兴趣，不仅仅在于它同自己的工作息息相关（同是相关行业，工作中也要时常接触），也在于它的通过难度。2000年的石家庄书店中很难见到有关cisco方面的书籍，为了CCNA的考试，将书店中能见到的所有有关 cisco的书籍都买了回来，甚至包括了CCIE的英文教材。<br>　　近三个月不分昼夜的学习–利用一切可能的时间，出差时在火车和汽车上看，在办公室中晚上困了就在公司地板上打个盹，醒了再接着学，并结合公司的路由器做着实验。7月底的时候终于拿下了CCNA的认证（对比现在某些号称一个星期拿下ccna的培训机构来讲，专门从事路由器调试工作的我用两个多月好象太慢了些，不过打下的基础却很牢固，），那时CCNA在业内的影响力很大–包括后来到上海接受为期一个月的新产品培训时，公司各地的技术支持都很钦佩。后来约略统计了一下，那段日子的平均睡眠为每天三个小时左右。<br>　　2000年8月份cisco将全部认证体系来了个彻底更新，内容和考题均发生了很大变化，在相关教材都没有推出的情况下，便又开始了准备CCNP2.0（CISCO认证网络专家）和CCDP2.0（CISCO认证售前网络设计专家）考试的相关资料，并借了几台旧的cisco路由器，向CISCO更高端的认证发起冲刺。<br>　　<br>　　当然，冲刺之余，也没有忘记我曾经的“老本行”，只不过这时更多的倾向于对因特网上的网络设备的破解与控制，记得最疯狂的一次是个周末，连续60个小时坐在电脑旁，不停的尝试着进入各种最先进的网络设备，那一次，控制了200多台各国的路由器、100多台其他类型的网络设备、美国一所大学的 12016核心路由器（这是当时CISCO最高端的路由器）、国内两个省（请原谅，由于业内原则，我不会透露它们的名字）的数台12000系列的路由器（本可以控制更多，不过拨号上网的网速实在太慢，限制了侵入）。这意味着如果愿意的话，仅需在世界上转几个弯，键入几道命令，那所大学以及这两个省至少二分之一的电信通讯网络将至少瘫痪两个小时–但我永远也不会这样去做。而令人遗憾的是，自己仅仅是利用了它们配置上的缺陷以及网上早已公布的漏洞，中国乃至世界的网络安全状况真的令人堪忧……<br>　　为了贴补认证考试所带来的花销，也在河北的微软培训中心兼职教授cisco的CCNA培训课程以及MCSE的部分认证课程。同时就可以免费利用培训中心的网络资源和听取MCSD，MCDBA的课程培训。并结交一些各界的朋友，一箭双雕的方法曾经让自己暗自得意了很长一段时间，如果按照年龄来看的话，好像19岁的我应该是中国最年轻的CCNA讲师了吧，到2000年12月时，经过多次重考-仍然都只是一两分的差距，在软件设计（MCSD， MCDBA）、网络设备维护（CCNP2.0）、以及系统集成的网络设计（CCDP2.0）的交叉学习和考试中，庆幸的是竟然没有因此而搞昏头脑，12月一个月的时间都是在考试中度过的，也是这个月，一万多元的积蓄消耗一空，多日加班积攒的休息日也得到了充分利用，交错考试也（这个月经历了20多次不同的认证考试-包括一些重考，也经历了出生以来对自己意志力的最大考验）锻炼了今后面对压力的韧性和忍耐。举个例子：如果希望拿到CCDP的认证，首先需要通过CCDA的考试，而DA的考试对英语阅读的要求极高，它是通过一个个的案例分析来判断你在网络设计方面的能力的，每个case如果单独打印出来，将占用至少4，5页打印纸。一般而言，你会碰到3-4个case，而在自己第三次冲刺DA的考试时，竟然碰到了5个CASE（这些认证考试每次重考难度都将加大），并且仅有短短的两个小时，只有在了解这些案例的基础上，才能去做50多道题目。精神几近崩溃！两个小时过去了，打印机将成绩打印了出来，一条绿线： PASS！自己的欢呼声随即响彻了整个楼道。<br>　　事后在网上搜索了一番，并查询了相应的一些培训机构，不经意间发现自己已成为世界上最年轻的同时拥有“微软认证系统工程师（MCSE）”、 “微软认证数据库专家MCDBA）”、“微软认证软件设计专家（MCSD）”、“思科认证网络专家（CCNP2.0）”、“思科认证网络设计专家（CCDP2.0）”认?证，且均在相关领域工作过的工程师。<br>　　虽然还小，但那时的自己在河北的系统集成行业已经有了相当的知名度，工作也已驾轻就熟，而我也希望着更多的挑战-当然，由于均为自费考试，略显微薄的薪资已经无力再承担认证费用。于是下决心准备去北京看一看，得知要离开的消息后，经理诚恳挽留，并许诺提高薪资，石家庄另外一家颇具规模的系统集成公司也希望我能过去工作，开出的月薪是4000元–这在消费水平不高的石家庄已经属于高薪。<br>　　去意已决，辞去工作只身来到了北京，颇具意味的是，虽然当时互联网行业已经跌至到了冰点，但招聘会上却充斥着系统集成行业的公司，各公司纷纷打出“CCNA优先”的标题，这在一定程度上也验证了自己的判断：在99年网页设计最繁盛的时候，为了选一个方向，经过很长时间的考虑，才坚定了在系统集成行业工作的决心-如果选择网页设计，有一定基础的我可以拿到4000或者更多，但内心却在问-这始终是一个假象，你真的具备拿如此高薪水的能力？仅仅一个网页设计没有技术含量，你认为它能繁荣多久？不停地思索这些问题，最终选择了留在博达，并决定待能力提高时再作考虑。<br>　　招聘会上，所拥有的那些认证，再加上参与的众多省级网络的建设经验，几乎每一家在收到我的简历后都立刻要求我去面试，并纷纷表示希望能够留在他们公司，而学历-却反而成了最无关紧要的因素，原本做好了来北京做搬运工的最坏准备–此时真的有些受宠若惊（对照一年前的那段日子，心中亦是感慨万千）。面试对我而言根本不是问题，自然薪资也戏剧性地水涨船高，在所谈的众多公司中-包括上市公司，外企，以及业内翘楚：曾有一家新加坡的服务器公司开出了税后9000元的高薪，他们的总经理直言不讳地说他看中的是我的学习能力以及拼搏精神，如此的年纪能够拿到如此多的认证和工作经验不是每个人都能达到的。但最后由于一心希望向集成行业发展，最终谢绝了邀请。<br>　　在公司的选择中，一家名不见经传的小公司吸引了自己的注意力，记得那时系统集成部的主管，一名清华自动化系的硕士，并曾在HP工作多年-也是自己后来的上司，曾经在面试时很诚挚地说：依你现在的能力，去一家大公司完全没有任何问题，不过大公司并不需要你能够独当一面，很大程度上仅是制度下的一颗螺丝钉，但最大的特点就是稳定。而选择新成立的小公司的话，自身能力会得到迅速提高，如果公司发展起来，升迁的机会也很多，收益自然颇丰。不过最大的特点就是风险很高，小公司随时有可能会被市场所淘汰，你的职业生涯也将会有所改变。他希望能考虑清楚后再给予答复。<br>　　喜欢冒险的我做出了抉择，来到了这家公司，在系统集成部门就职，职位是售前支持经理，负责电信行业相关的方案设计。部门的员工均有在业内各知名公司工作过的经验，堪称业内精英。由于职责划分明确，相互之间没有太多的利益冲突，大家合作得很融洽，上班是同事，下班是朋友。为了完成从厂商售后工程师到集成行业售前设计专家的转变，那段时间接受了众多来自各种不同厂商的各类产品培训，也参加了相当多设备厂商的正规培训，再加上同事们的真诚帮助，使自己顺利地完成了过渡。并对于系统集成行业的发展运作有了进一步的了解。<br>　　或许是一切来得太过顺利，年少轻狂的我有些满足，自认为在同龄人中已经算是佼佼者了，也想今后就这样过下去了–年纪轻轻便有着一份令人羡慕的职业，稳稳当当地做个工程师。没有了往昔为学习而悬梁刺骨的毅力，言谈中也多了几分狂傲。回家时母亲看出了我的自满，她没有说什么，只是闲谈中看似无意的问了一句：最近看过什么书没有。她知道她的儿子会读懂她的弦外之音。心头一凛：两个月来已经没有再完整看过一本书籍了，这还是从前的我吗？心浮气躁曾经是自己一度用来评价IT行业的，如今却照搬到了自己的头上。<br>　　于是开始准备CCIE的考试–这个在网络行业公认难度最大的认证，而且也是花费最大的一项认证–没有10万元是拿不下来的，当然，这仅仅只是必备条件之一，它还需要你必须具有丰富的设备调试经验，以及面对压力和挫折时泰然自若的心态。两天的LAB考试时其中的难度远非一般人所能想象，仅以第二天下午的troubleshooting为例，考官人为的在一个用各种CISCO设备搭建的网络环境中设置上百个故障点–包括硬件和软件配置上的，甚至你所使用的调试线缆都有可能发生问题。短短的数小时内，你要做的就是要让这个网络环境恢复正常，绝大多数人都在这一关被刷下阵来。记得自己一位 CCIE朋友在讲到他曾经的认证经历时，为准备LAB的考试，曾经整整两个月没有跨出实验室一步，出来时所有的同事都没有认出眼前这个瘦骨嶙峋，胡须满布的人，那段时间，他瘦了20斤！–现在想来，真有些古代武林高人闭关修行的味道。巨大的付出也意味着丰厚的回报，当时中国仅有不到100名CCIE，一位CCIE的薪水是上不封顶的，从年薪20万到上百万均有，这也是后来人们趋之若鹜的去争考CCIE的原?因-间接导致了中国CCIE的良莠不齐–当然，这是后话。<br>　　那段时间，花费上万元购买5台2手路由器搭建成一个最基本的lab环境，放在了自己的办公桌上，空余时便以做实验为乐。七月初，两次报名参加了CCIE的笔试，历史在重演，每次考试均以一分之差未通过。而这个时候，发生了一件事，也由此改变了自己今后的人生道路。<br>　　如果没有记错的话，2001年的7月份，中国股市经历了最为动荡的一次调整，3000亿市值从股市中蒸发了，但却未想与自身有什么关联-并不喜欢炒股。有联系的便是公司的董事长曾经是做证券并在短时间积累大量财富的，7月份的一个上午，我们部门正在联想总部接受AVAYA的售前工程师培训-它是我们的合作伙伴，联想的一位经理在休息时还在连夸我们所做的设计方案。中午时，经理的电话将大家全部召回，宣布由于董事长为了应付股市疲软，抽调资金，公司解散。而在这之前，公司却正处于扩张阶段，众多项目已经签约和正在签约，虽然或许不会达到预定的目标，但实现盈利也是指日可待。从未想过公司会在这个时间关闭。很多人都不能接受这个事实，包括自己。并不是担心找不到工作，而是这种落差让人无法承受。正欲大展身手时却……，晚上吃离别饭的时候每个人都很激动，任情感在歌声和酒席上宣泄着，很多人落了泪。那一晚，我们都醉了……<br>　　两次冲刺失利再加上这起突如其来的事件，身心俱疲的我突然很想去放松一下，也希望在旅途中能够再次思索自己今后的方向，因此谢绝了大唐电信系统集成部经理的加盟邀请-既有旅行的原因，另一方面原部门主管正在寻找风险投资，筹备着将公司买下的事情，他希望大家还能一同合作-不想因为这件事情而导致如果去大唐工作一段时间后，仍要再次离开-这将影响自己在业内的个人信用。而信誉，也间接决定着你在这个行业能否立足，立稳！<br>　　背上睡袋和帐篷，独自去野外旅行了一个多月，在罕无人迹的深山和森林中，望着满天繁星，心灵得到了前所未有的平静。曾迷失在茫茫林海，也曾经在攀岩时滚下陡坡，曾经与毒蛇共眠，同孤狼为伴，多少次在生与死之间徘徊，却从未感到过害怕。我在寻找着自己今后的人生方向，也寻回了昔日的自我-不再担心什么，本就一无所有，何惧暴雨狂澜？<br>　　回来后不久，9-11事件发生了，世界真是小，地球另一端的事情很快就影响到了北京，本已衰落的IT行业再次雪上加霜，北京的投资公司撤回了大部分准备针对IT行业的投资，并暂不考虑有关IT业公司的商务计划书。立竿见影的结果便是：经过无数次谈判、即将融资成功的原部门主管这次也难逃厄运 -融资化为了泡影。<br>　　只不过，这次我已经平和了许多，躲在住处读着先前购买却没有时间翻阅的各类书籍，边想着今后的道路。一天无意中找到了从家乡带来的很不起眼的塑料袋，里面满是零碎的小纸片，那是自己初中和高中时所有的灵感汇集–曾经酷爱搞发明的我所想出的上百种思想结晶。其中很多灵感现在看来，都还有着不少的闪光点。翻看着，惊讶于当初备受歧视的我竟会有着如此多的发明构思，想起了六年前的我为了让自己的发明得到认同而离家出走，来到北京后的那段非人经历。而从毕业时起，三年了，三年内为了订下的一个目标而努力，内心中再没有了那份激情，而三年前所订下的目标已经基本实现，是否找到了下一个目标？对，做一个成功的发明家–这也是我十年前的梦想，为理想而奋斗的人是最快乐的。<br>　　遗憾的是也要为生存操劳，在积蓄所剩无几的时候，便又开始了找工作，虽然2001年11月份的系统集成行业已经呈现颓势，“奶酪”风行整个中关村，裁员的风浪此起彼伏，有点像2000年底时的网页公司，不过无论在何种行业，中高级人才也总是供不应求，这一点倒是不会改变。没费什么周折来到了一家业内新崛起的网络设备公司的增值业务部门，仍然从事先前的老本行–售前方案设计，不过服务对象由原来所从事过的电信、城域网以及银行网络换成了国家政府、部委的网络建设。<br>　　在这家颇具规模的公司里，一边工作，一边试图重新去寻回曾经搞发明的头脑-所幸这三年留在脑中的条条框框并不很多，很快，头脑中的灵感日益增多了起来。<br>　　部门的工作氛围也很愉快，上司是一位很能干的女孩-却没有半点上司的影子。如同在先前的公司时一样，彼此信任，互相帮助（这也是自己选择 IT行业作技术的一个原因，同事间少有勾心斗角，相互间都是朋友），完成着公司分派的一个个任务。闲暇时一块讨论着自己新构想的一些发明的可行性和实施问题。巧的是，进入公司的那段时间里，正赶上公司正在兼并属于同一集团之下的另一家网络公司，公司内人心浮动，而工作，也开始日益繁忙了起来，各种方案设计应接不暇-时常需要加班-众所周知，IT行业内的加班是不给加班费的。没有太多的时间再去考虑自己的一些发明。是否辞掉工作去做真正想做的事？但这就意味着再次失去稳定的收入，面对多数人的不理解，以及一个不可知的未来？还是留下来稳稳当当地做个白领，工作一段时间后转为项目经理或者去做销售，一生就这样平平常常地过下去？那是一个可以预知的未来。我的内心再一次开始犹豫不决……<br>　　一次加班时同公司的一位销售闲聊，她看出我的徘徊，直截了当地说：如果你选择工作，就要认真去做，如果想去做你喜欢的事情，就干脆辞去工作去干，不要指望两件事你都兼顾。与其这样摇摆倒不如踏实地去做一件事情，否则什么都做不好！一言惊醒梦中人，是呵，鱼与熊掌不可兼得，怎么连这么简单的道理都忘掉了，想想在丛林中时的感悟，那次，终于下定了决心……?<br>　　2002年3月，在公司要求转正的那天，我平静的对部门主管提出了辞职申请，离开公司时，已经完全实现了三年半前的那个承诺，并开始向新的目标迈进……<br>　　应该说，在刚辞职的那段时间里，依然迷惘。虽然模糊知道希望通过个人创业，寻找风险投资商，从而将自己的发明转化为产品。但该怎么去做，如何实施，心中却没有多少头绪。手中有数个所想出的项目，其中涉及到“能与电脑沟通并实现互动的电脑椅”，“汽车GSM+无线定向综合防盗控制系统”，“笔记本全方位防盗及控制系统”等，第一步自然是要申请专利了，而专利的申请需要提交具体的电路设计图，为了能够作出设计图，对电子行业并不熟悉的我从书店再次买来上千元的相关书籍、在网络上搜集到数以GB计的信息、研究单片机，无线通讯以及国际最先进的电子器件的应用等，并从中筛选出最需要的资料，一个多星期昏天黑地的学习后，已能够用行业术语同业内专家交流了，电路图也画得颇具专业水准-各个行业均有相通之处，我想这也是曾经做售前时所赋予我的一项能力。但随着研究的不断深入，也越来越感到迷茫：这些项目均需要对现有设备进行较大的改造，而且对于投资商而言：太前沿的东西需要极高的科技含量，也就意味着巨大的投资，未知的市场前景，很长的投资回收期–甚至可能血本无归，风险太大。摆在眼前的一个现实是：投资商凭什么要将巨额资金投到这么一个充满未知和悬念的项目上，还是在IT业最不景气的时候？–这也是为什么众多投资商都希望将钱投到处于发展和成熟期的企业，他们需要的是短期内看得见的利润回报。尤其是经过了NASDQ的狂潮之后，现在已经是盈利为王，而不再是概念致胜的时代！<br>　　冷静下来的我面对着再一次的抉择，是舍弃现有项目而再寻找并开发更有市场前景，风险更小的项目，还是一条路走到黑？-人生其实不也是由大大小小的选择构成的吗？犹如赌博（自己从不参与赌博，只是世间万物皆有相通之处，所选赌博一例虽不算太恰当，却也贴切），权衡利弊后的每次下注便要承当起猜错的风险，而赌王同赌徒的区别就在于他不仅能赢得起，输的时候也同样放得下。荣辱不惊、敢于放弃便标志着他下一次的成功！<br>　　幸运的是在研究“笔记本综合防盗系统”的电源管理模块时，灵感在脑中闪现：随着数码设备的增多，人们外出旅游的热情日益高涨，为什么不做个通用型的充电器，给各种数码设备充电呢？问题确定了下来，剩下的便是搜索市场及网络中关于充电器方面的各种资料，去各国的专利数据库中寻找是否有相关发明。经过一段时间研究，在通过分析对比并终于找到各种充电器的共性之后，我自行设计了一种能够充绝大多数电子设备，并可在各种环境下利用多种供电方式为不同的设备充电，还可让消费者可以根据自己现有设备以及使用环境自己定制所需要的充电和供电方式的充电器。该充电器整合了我在做系统集成的方案设计时所采用的模块化设计思想，并突破了传统充电器的设计模式，各个附件之间都是相互联系，紧密结合的。紧接着便开始复习专利法，设计电路图并学着写专利申请的各种文件。通过专利代理为此项目申请了数项国家专利-自然，这个时候，我也能够同电源专家自如交流了J接下来的事情应该是书写商务计划书，吸引投资商了。为了令计划书言之有据，又买来大量有关管理，市场营销，策划以及财务，人力资源，风险投资等方面的书籍学习参考，并听取了各行业朋友们的建议-他们都在很认真的帮助我，用了半个多月的时间写成了一份初稿，或许是上天的有意安排，也或许是潜意识希望将这个并不甚满意的文稿毁掉，总之，一天下午，两夜未眠的我竟稀里糊涂的用一个从网上down下的加密软件将文稿以及备份加了密，在忘掉密码的基础上竟又加密了一次，文档再也无法恢复，半个月的心血化为灰烬，而那时其它一些事情也同时烦扰着我，看不到前面的路，也不知道能走向何方？就在想要放弃的一刹那，内心却抵抗着。它反复地说：坚持下去，再坚持一会儿，你会成功的。烦忧的我便开始按照《世界上最伟大的推销员》一书所规定的，逼着自己每天大声朗读成功誓言，自己鼓励着自己。又一次读懂了“忍耐”这个词所表征的含义……<br>　　转机发生在五月份，“中国科技投资网”打来电话，希望能够了解一下这个项目-并给他们一份产品介绍的文档-数天前曾经在这个网站上注册过一次。那天晚上连同第二天的上午，没有离开电脑椅的我写出了一份上万字全新的计划书初稿，并发送给了他们，第二天，便与他们签订了合作协议，谈话过程中，了解到，这个有着政府背景，并作为企业融资平台的公司在此之前从未同个人融资项目进行过接触，针对的仅为公司融资项目，而这次，是一个特例，并准备将自己的项目作为重点推荐项目向投资商推荐，五月底，我的项目放在了公司的网站上，并处于“重点推荐项目”中最显要的位置。大大激励了我的信心。<br>　　同期，朋友们也在帮着联系投资商，科博会上也遇到了一些对此项目感兴趣的投资商和企业，注册的科技开发公司即将获得批准。我冷静的注视着所发生的一切。这并不算成功，恰恰相反，这仅仅是一个开始，一个通向更加曲折的道路的开端。我知道，现在正是最困难的时候：由于申办专利，公司注册以及其他的花销，积蓄已经捉襟见肘，而此时却并未跟投资商有过实质性的接触，样品由于一些原因不能去试做。同一位清华MBA的朋友交谈时对我说：你现在所能做的，就是等待，千万不要放弃。但我不知道还要等待多久，还能忍耐多久，我等待着，忍耐着……<br>　　从网络行业的兴起，繁盛，疯狂，跌入谷底，慢慢复苏，三年的时间目睹过、思考过，也亲身加入、感受过，三年的经历好像过了几十年，在其中成长了许多，也逼着去思考一些问题。但不后悔，所学到和经历的一切，是传统行业数十年乃至上百年都不能遇到的。虽然现在已经跳出了这个行业，可某些行业内的行事准则仍在影响着自己的判断和行为。<br>　　在对成功的追逐中，我也在不断的寻找成功的定义：成功是什么？或许多数人会认为有名有钱便是成功，但自己却认为：成功更是一种精神状态，能够下决心去做别人不敢想的事，在挑战自我时得到锻炼，体验过了，也试过了，人生没有虚度。最后的所谓成功只是这个过程中的副产品，真正的成功是你勇于超越自己，作你真正想做的事，活出你自己！<br>　　故事到这里似乎也应该结束了，不过多年的经历也让自己总结了一些经验，不吐不快。<br>　　首先想谈一谈自己工作时的几点感触：<br>　　1）认真规划自己的职业方向，选择一个行业时，是否真正对其有兴趣，与你的理想是否合拍？请慎重安排自己的职业道路，而选中了一条路，就要认真做下去，只有对一个行业有了深入地了解，你才有资格得到你希望的薪水。<br>　　2）求职时的简历以简单明晰为好，招聘官其实最不喜欢看到的就是厚厚一摞，夹着大堆证书和像片的简历了，能简单明了的用一至两页纸表明你自己就可以了，还有，简历可以适当夸张，但最好实事求是，比如简历中说自己对某项技术如何精通-但你事实上却并不了解，三言两语就能令你露出马脚，或者说自己曾在某某公司做过某某职位-但或许你可能仅仅听说过该公司的名字。这样的话一调查你就已经毁掉了自己的信誉。刚出来时最好能够在第一个公司做上一段时间，不仅有助于你对业务的了解，还能在再次更换工作时给下一个公司一个诚信度。<br>　　3）求职时不要过分看重薪水和职位以及办公环境，知识和经验的积累以及人际关系的建立最为重要，过于计较眼前的得失会使你失掉很多机会。<br>　　4）做一名合格的系统集成行业的售前工程师，前提便是要有良好的文档编写能力-无论你是否承认，这也是为什么很多人不愿做售前的原因，一个方案有两三百页，虽有许多模版供参考，但许多东西还是要你自己写就的。?<br>　　5）良好的沟通能力也是售前专家的基本素质之一，面对行业各异的客户，要能在尽可能短的时间内了解到客户需求，现状以及制定出一套适合该行业客户的方案，没有好的沟通能力是很难办到的。<br>　　6）演讲能力也不可或缺，作为一名售前，很多时候都要去向客户介绍公司的产品，解决方案以及短期的产品培训，不敢讲话，怯懦，将是你的致命伤。<br>　　7）团队协作能力，一个方案不是一个人所能独立完成的，现在公司更讲究你能否融入能这个团队，作为一分子发挥能力。很喜欢这种团队精神，记得感触最深的是在先前公司的一个方案投标，由于项目来的匆忙，，我和自己的上司、另一名售前和一位销售连着加了几天的班，每次都是凌晨三四点才回去，而其中一天由于自己这方面的原因，她们已经本可以直接走的，但三个女孩一直陪我到凌晨四点才各自回家休息，她们担心我一个人加班太寂寞，而且如果有能够帮忙的地方大家可以一块做。同事与朋友间似乎没有了太多的界限。<br>　　8）好的身体。在IT业，加班、出差早已是司空见惯的事情，如果没有一个健康的体魄，很快你就将被淘汰-这决不是危言耸听。举个例子，如果不是因为先前习练散打，那么几年下来的拼命学习，我的身体早就垮了。<br>　　9）极强且不间断的学习能力，如果想做好一个网络方案的话，不仅平时要对各种网络设备和最先进技术了解，还要能在很短的时间内熟悉和了解客户的行业和业务背景，并在方案中为客户着想，阐明网络的建设和更新对客户业务方面的改善，这就需要极强和不间断的学习能力。能够在最短的时间内搜集到自己所需要的信息，并很快的将这些信息分析，吸收，利用。每一个行业方案都相当于你要在最短的时间内了解并分析该行业，每个方案都是独一无二的，没有很好的学习意识和学习能力很难做到这些<br>　　10）有一点不得不提的是，在中国，技术始终不居主要位置，也并不缺技术人才（这似乎是一个悖论：不过想一想，核心技术都在国外，一般的设备调试等工作找些人培训一番就可胜任），有机会的话（这是在你的技术能力已经达到一定水平的基础上），可以考虑向管理和销售方面发展，搞管理能够提高你的领导能力（比如可以从售前工程师转为项目经理），而做销售则能够培养你的市场思维和灵敏的市场嗅觉，并在销售工作中为自己今后的发展积累庞大的人脉，这些资源才是你今后发展的支柱-并且好的销售不会拘泥于行业的限制（BTW：仅以系统集成行业为例，很多CCIE-这些顶尖的技术高手大部分都做了项目经理和销售）。有点难受是不是，但这就是中国的现状！<br>　　综上所述，这就是为什么好的售前工程师奇缺的原因，如果你能做到以上几点，还担心薪水吗？呵呵，谈了这么多，还想谈谈自己对于个人创业的一些感触，不知道诸位看官是否有兴趣坚持到最后。创业前请先冷静思考，是否做好了吃苦忍耐的准备，是否拥有了较为完善的人脉，知识储备是否到位，自身素质（身体，心理）是否达到。而且，一个好的想法并不会成为一个好的融资项目，更主要的是在市场，团队管理以及其他方面，即所谓的功夫在诗外。<br>　　善于跟各类圈中的人士交往，而不仅仅局限于业内朋友。–了解他们的人生经历，思维习惯，爱好，学习他们处理问题的模式方法，探察社会各个角落的现象和问题，这也是你以后发展的巨大本钱。没有这些将会遇到很多难以想象的困难，成功的概率也将大大降低。记得一次在火车上，我甚至跟一位曾去过 29个国家的高级工程师，一位“黑社会”的小头目（当然，他是不会说自己是黑社会的），茅台酒厂的一位销售代表相处甚欢，从他们身上，也学到了很多东西。<br>　　主动帮助他人，真心对待你身边的每一个人，才能建立起良好的人际关系-而不要奢求回报。自己曾在北京公交车上主动为一位女士指路并陪同她到了她要去的地方，路上交谈中才得知她是国内某知名媒体的总监理，后来我们成了朋友，她也帮了自己不少忙。<br>　　广博的知识积累，如果选择了个人创业，就意味着你即将单独面对和考虑各种突如其来的繁杂问题，对于市场、财务、管理、营销、税务等各方面都要去通盘筹划，而不仅仅是凭借你的技术就能搞定这些，知识的积累并不是一朝一夕所能完成的，平时多看些各方面的书籍，对今后的用处会很大。自己仅去年一年买书的花费就在6500元左右，但这些书帮助我少走了许多弯路。<br>　　提高你的心理素质，克服内心的弱点和性格缺陷。如果存在着多疑，敏感，天真，犹豫不决，胆怯，多虑等这些性格弱点的话，那么，逐一克服它们！在此之前，不要考虑创业，这些弱点将成为阻碍你走向成功的绊脚石：而且，学会忍耐-很多时候，成功往往取决于你是否能够坚持下来，且坚持到最后：能够冷静面对社会所带给你的各种偏见和歧视-有时这些反而是促使你成功的动力。<br>　　想好了就大胆去做，既然认准了一个自己希望的方向（这个方向一定要是你所感兴趣的-或者是你的理想–否则很难坚持下去），就尽全力去闯。如果一件事情在实施之前仅有10%的把握，但只要去努力，去坚持，成功率会越来越高的，但不去做的话，连1%的成功机会都不会有。而且如果第一次进入一个行业，指望一次成功犹如天方夜谭，失败在所难免，但在过程中会积累很多经验教训，接着做下一个项目的话，这些教训会帮助你走向成功的。<br>　　个人素质以及优秀的团队才是投资商所看重的，如果仅仅希望凭借自己的一个发明就奢望投资商投资的话，那是痴人说梦。好的发明多的是，但 99%的专利发明都被束之高阁，有没有想过为什么？发明向产品转化的过程中，存在着很多不可预测的环节-产品市场前景如何？生产环节和成本如何调控？市场推广期有多长？何时能够实现盈利等等，如果发明人没有克服这些困难的勇气和毅力，以及良好的心理素质，随时都可能败下阵来。何况在中国，知识产权从未真正受到过重视，仅靠专利法是无法应付众多仿冒厂商的。而一个有着优良素质的领导者（比如优秀的管理才能，敏锐的市场分析能力等）和目标一致的团队的话，一个项目失败，他们完全可以再次寻找更好的项目去做。根本不必担心公司的盈利能力。<br>　　又一段故事将要展开，事隔多年，所发生的这些真实片断一片片从脑海深处浮现，如今却要将这些痛苦甚至有些残酷的回忆诉诸键盘，如果能给朋友们一些启示的话，我也就心满意足了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hdu-5835-续缘之路]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/hdu-5835-%E7%BB%AD%E7%BC%98%E4%B9%8B%E8%B7%AF/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><font color="#6495ED" size="5" face="微软雅黑">Danganronpa</font></p>
<p><font color="#008000" size="4" face="微软雅黑">Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/65536 K (Java/Others)<br>Description</font><br>Chisa Yukizome works as a teacher in the school. <a id="more"></a><br>She prepares many gifts, which consist of n kinds with a[i] quantities of each kind, for her students and wants to hold a class meeting. Because of the busy work, she gives her gifts to the monitor, Chiaki Nanami. Due to the strange design of the school, the students’ desks are in a row. Chiaki Nanami wants to arrange gifts like this:</p>
<p>Each table will be prepared for a mysterious gift and an ordinary gift.</p>
<p>In order to reflect the Chisa Yukizome’s generosity, the kinds of the ordinary gift on the adjacent table must be different.</p>
<p>There are no limits for the mysterious gift.</p>
<p>The gift must be placed continuously.</p>
<p>She wants to know how many students can get gifts in accordance with her idea at most (Suppose the number of students are infinite). As the most important people of her, you are easy to solve it, aren’t you?</p>
<p>Input<br>The first line of input contains an integer T(T≤10) indicating the number of test cases.</p>
<p>Each case contains one integer n. The next line contains n (1≤n≤10) numbers: a1,a2,…,an, (1≤ai≤100000).</p>
<p>Output<br>For each test case, output one line containing “Case #x: y” (without quotes) , where x is the test case number (starting from 1) and y is the answer of Chiaki Nanami’s question.</p>
<p>Sample Input<br>1<br>2<br>3 2</p>
<p>Sample Output<br>Case #1: 2</p>
<p><font color="#FF0000" size="4"><br>具体做法：维护一个队列<br>首先可以知道答案不超过所有礼物之和的二分之一（重要！！！），那么通过一个队列来模拟发礼物的过程，将每个礼物的个数放入队列，然后弹出一个判断两个条件：1.如果大于1就减去1然后放入队列尾部，然后将结果加一。2.队列里是否还有下一个元素，也就是要满足题目中不同礼物相隔这个条件。<br>最后判断如果结果大于所有礼物之和的二分之一，那说明每一个人都能按题意拿到普通礼物，剩下的就都是神秘礼物就可以了。</font></p>
<p>AC代码：（未优化）<br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.*;  </div><div class="line"><span class="keyword">import</span> java.util.*;  </div><div class="line"><span class="keyword">import</span> java.util.concurrent.LinkedBlockingQueue;  </div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;  </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </div><div class="line">        Scanner sc=<span class="keyword">new</span> Scanner(System.in);  </div><div class="line">        <span class="keyword">int</span> n=sc.nextInt();  </div><div class="line">        Queue&lt;Integer&gt;queue=<span class="keyword">new</span> LinkedBlockingQueue&lt;Integer&gt;();  </div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> o=<span class="number">1</span>;o&lt;=n;o++)  </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">int</span> k=sc.nextInt();  </div><div class="line">            <span class="keyword">int</span> sum=<span class="number">0</span>;  </div><div class="line">            queue.clear();  </div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)  </div><div class="line">            &#123;  </div><div class="line">                <span class="keyword">int</span> cur=sc.nextInt();  </div><div class="line">                queue.add(cur);  </div><div class="line">                sum=sum+cur;  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">int</span> count=<span class="number">0</span>;  </div><div class="line">            <span class="keyword">while</span>(!queue.isEmpty())  </div><div class="line">            &#123;  </div><div class="line">                <span class="keyword">int</span> cur1=queue.poll();  </div><div class="line">                count++;  </div><div class="line">                <span class="keyword">if</span>(queue.isEmpty())  </div><div class="line">                &#123;  </div><div class="line">                    <span class="keyword">break</span>;  </div><div class="line">                &#125;  </div><div class="line">                <span class="keyword">if</span>(cur1&gt;<span class="number">1</span>)  </div><div class="line">                queue.add(cur1-<span class="number">1</span>);  </div><div class="line">                <span class="keyword">int</span> cur2=queue.poll();  </div><div class="line">                count++;  </div><div class="line">                <span class="keyword">if</span>(cur2&gt;<span class="number">1</span>)  </div><div class="line">                queue.add(cur2-<span class="number">1</span>);  </div><div class="line">            &#125;  </div><div class="line">            System.out.print(<span class="string">"Case #"</span>+o+<span class="string">": "</span>);  </div><div class="line">            System.out.println(Math.min(sum/<span class="number">2</span>, count));  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hdu5842-Lweb and String-续缘之路]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/hdu5842-Lweb-and-String-%E7%BB%AD%E7%BC%98%E4%B9%8B%E8%B7%AF/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><font color="#6495ED" size="5" face="微软雅黑">Lweb and String</font><br><font color="#008000" size="4" face="微软雅黑">Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/65536 K (Java/Others)</font><br>Problem Description<br>Lweb has a string S.<br><a id="more"></a><br>Oneday, he decided to transform this string to a new sequence.<br><br>You need help him determine this transformation to get a sequence which has the longest LIS(Strictly Increasing).<br><br>You need transform every letter in this string to a new number.<br><br>A is the set of letters of S, B is the set of natural numbers.<br><br>Every injection f:A→B can be treat as an legal transformation.<br><br>For example, a String “aabc”, A={a,b,c}, and you can transform it to “1 1 2 3”, and the LIS of the new sequence is 3.<br><br>Now help Lweb, find the longest LIS which you can obtain from S.<br><br>LIS: Longest Increasing Subsequence. (<a href="https://en.wikipedia.org/wiki/Longest_increasing_subsequence" target="_blank" rel="external">https://en.wikipedia.org/wiki/Longest_increasing_subsequence</a>)<br><br><br>Input<br>The first line of the input contains the only integer T,(1≤T≤20).<br><br>Then T lines follow, the i-th line contains a string S only containing the lowercase letters, the length of S will not exceed 105.<br><br><br>Output<br>For each test case, output a single line “Case #x: y”, where x is the case number, starting from 1. And y is the answer.<br><br><br>Sample Input<br>2<br>aabcc<br>acdeaa<br><br><br>Sample Output<br>Case #1: 3<br>Case #2: 4<br><br><br>Author<br>UESTC<br><br><br>Source<br>2016中国大学生程序设计竞赛 - 网络选拔赛<br><br><br><font color="#FF0000" size="4"><br>这道题一开始把我引向最长上升子序列。。汗<br>结果并不需要，因为a不一定映射成1，a也可以映射成2，3，4…但是一个单词对应的数字是唯一的<br>所以只需要统计一共有多少个不同的字母就能知道最长上升子序列的长度<br><br>AC代码：</font>

<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.*;  </div><div class="line"><span class="keyword">import</span> java.util.*;  </div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;  </div><div class="line"><span class="keyword">static</span> String cur;  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </div><div class="line">        Scanner sc=<span class="keyword">new</span> Scanner(System.in);  </div><div class="line">        Set&lt;Character&gt; set=<span class="keyword">new</span> HashSet&lt;Character&gt;();  </div><div class="line">        <span class="keyword">int</span> n=sc.nextInt();  </div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)  </div><div class="line">        &#123;  </div><div class="line">            set.clear();  </div><div class="line">            cur=sc.next();  </div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;cur.length();k++)  </div><div class="line">            &#123;  </div><div class="line">                set.add(cur.charAt(k));  </div><div class="line">            &#125;  </div><div class="line">            System.out.print(<span class="string">"Case #"</span>+i+<span class="string">": "</span>);  </div><div class="line">            System.out.println(set.size());  </div><div class="line">        &#125;  </div><div class="line">  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hdu5832-A water problem-续缘之路]]></title>
      <url>https://jacklightchen.github.io/2016/10/24/hdu5832-A%20water%20problem-%E7%BB%AD%E7%BC%98%E4%B9%8B%E8%B7%AF/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><font color="#6495ED" size="5" face="微软雅黑">A water problem</font><br><font color="#008000" size="4" face="微软雅黑">Time Limit: 5000/2500 MS (Java/Others)    Memory Limit: 65536/65536 K (Java/Others)</font><br>Problem Description<br>Two planets named Haha and Xixi in the universe and they were created with the universe beginning.<br><br><a id="more"></a><br>There is 73 days in Xixi a year and 137 days in Haha a year.<br><br>Now you know the days N after Big Bang, you need to answer whether it is the first day in a year about the two planets.<br>Input<br>There are several test cases(about 5 huge test cases).<br><br>For each test, we have a line with an only integer N(0≤N), the length of N is up to 10000000.<br><br><br>Output<br>For the i-th test case, output Case #i: , then output “YES” or “NO” for the answer.<br><br><br>Sample Input<br>10001<br>0<br>333<br><br><br>Sample Output<br>Case #1: YES<br>Case #2: YES<br>Case #3: NO<br><br><font color="#FF0000" size="4">比赛的时候先用java的BIGInteger水一发结果MLE了<br>然后再用java写一个模拟取余<br>又MLE了。。。<br>然后发现此题没有用java过的，顿时不开森。（对java党如此不友好=。=）<br>附上C++AC代码</font>

<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">char</span> shu[<span class="number">10000000</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> cs=<span class="number">0</span>;</div><div class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;shu)!=EOF)</div><div class="line">&#123;</div><div class="line">cs++;</div><div class="line"><span class="keyword">long</span> sum=<span class="number">0</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(shu);i++)</div><div class="line">&#123;</div><div class="line">sum=(sum*<span class="number">10</span>+shu[i]-<span class="string">'0'</span>)%<span class="number">10001</span>;</div><div class="line">&#125;</div><div class="line"><span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>,cs);</div><div class="line"><span class="keyword">if</span>(sum==<span class="number">0</span>)</div><div class="line"><span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</div><div class="line"><span class="keyword">else</span></div><div class="line"><span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
  
  
</search>
